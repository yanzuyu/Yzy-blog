{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/css/images/favicon.png","path":"css/images/favicon.png","modified":1,"renderable":0},{"_id":"themes/yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/vector.md","hash":"e86a1d7d7f3e14b1403e42d266619be1c78a90cb","modified":1613035728247},{"_id":"source/_posts/xingyunlib.md","hash":"2fc0513f8789ba9db83aee34840db2f7870e7bd0","modified":1613035728248},{"_id":"source/_posts/新年快乐.md","hash":"3ea97493e6286ce30e2e1cc22dd043955ae99ed2","modified":1613035967392},{"_id":"source/css/images/favicon.png","hash":"f4634b23a5bba0c47a4a8a40f42c71e283312e17","modified":1612356740081},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1510733361000},{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1510733361000},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1510733361000},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1510733361000},{"_id":"themes/yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1510733361000},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1510733361000},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1510733361000},{"_id":"themes/yilia/README.md","hash":"1bf755806af9d8874bd22e1abbdaaa24328ef4dc","modified":1510733361000},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1510733361000},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1510733361000},{"_id":"themes/yilia/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1510733361000},{"_id":"themes/yilia/_config.yml","hash":"9d8d79b520cd8f30470e46992a29d0616e594720","modified":1612583224680},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1510733361000},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1510733361000},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1510733361000},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1510733361000},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1510733361000},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1510733361000},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1510733361000},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1510733361000},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1510733361000},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1510733361000},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1510733361000},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1510733361000},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1510733361000},{"_id":"themes/yilia/source/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1510733361000},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"b86b248720ad415ec1b5fee53fb583776c776f83","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1510733361000},{"_id":"themes/yilia/source/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"630c6ec866d056657d3d91e34b4c64eb993c0654","modified":1510733361000},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"183d7ca4ba8e7c80694ffdc8cf39957092238346","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1510733361000},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1510733361000},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1510733361000},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1510733361000},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1510733361000},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1510733361000},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1510733361000},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1510733361000},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1510733361000},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1510733361000},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1510733361000},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1510733361000},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1510733361000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1510733361000},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1510733361000},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"cafe3834017a3bf47420f37543725025225a2c89","modified":1510733361000},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1510733361000},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1510733361000},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1510733361000},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1510733361000},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"97b8fba41c914145710b90091f400b845879577f","modified":1510733361000},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1510733361000},{"_id":"themes/yilia/source-src/css/main.scss","hash":"2f86a014af93583caba78a563d9549826bf28294","modified":1510733361000},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1510733361000},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1510733361000},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1510733361000},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1510733361000},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1510733361000},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"ace041d72f95b419f6a5e443191703c2b62007f4","modified":1510733361000},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1510733361000},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1510733361000},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1510733361000},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1510733361000},{"_id":"themes/yilia/source-src/css/social.scss","hash":"724162ccf3977e70a45d189abfaa20b6e2fba87b","modified":1510733361000},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1510733361000},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"1b1aa0908e58cf942b28e3881d07c5573c4129e1","modified":1510733361000},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1510733361000},{"_id":"themes/yilia/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1510733361000},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1510733361000},{"_id":"themes/yilia/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1510733361000},{"_id":"themes/yilia/source-src/js/fix.js","hash":"d6782d53c992e712af39c84e804eccaf38830b94","modified":1510733361000},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1510733361000},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1510733361000},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1510733361000},{"_id":"themes/yilia/source-src/js/slider.js","hash":"e846bcc5aac9c68b93f7b8de353df54d8d29f666","modified":1510733361000},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"5f99b55980da64a723a8e14d5a7daba0d6504647","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"0809a4829aabeb4e911a3ed04ec28db4df7dfe3f","modified":1510733361000},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1510733361000},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"e68bbac9ffb1ad27b56837c9abad6ed6bb7daa0c","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1510733361000},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"2577deb6a9fe4f5436360b2ce9afcc7f9a7f0116","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"5dccfbe165b23a101f1333cc65ed8efbd197453c","modified":1510733361000},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1510733361000},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1510733361000},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1510733361000},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1510733361000},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1510733361000},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1510733361000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1510733361000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1510733361000},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1510733361000},{"_id":"themes/yilia/source/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1510733361000},{"_id":"themes/yilia/source/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1510733361000},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"4cb685f07e89dd5175c2a576e73a1a957aec5637","modified":1510733361000},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1510733361000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1510733361000},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1510733361000},{"_id":"public/content.json","hash":"41858505ac8836bfe31ae1570802190d067c7cb8","modified":1613036127819},{"_id":"public/2021/02/11/新年快乐/index.html","hash":"623b505d4e6b05bda55d4338ce1683ede5b99dd0","modified":1613036127819},{"_id":"public/2021/02/06/vector/index.html","hash":"0410a6599420e6dbb5d39c89010afdd92b2b4fc8","modified":1613036127819},{"_id":"public/archives/index.html","hash":"f5932f27b89dbe75ed906db99dfd3fc2e5fc04db","modified":1613036127819},{"_id":"public/2021/02/06/xingyunlib/index.html","hash":"22a924d0863923c1261ffdb1dac299ee824a9c5a","modified":1613036127819},{"_id":"public/archives/2021/index.html","hash":"92d4f5b19e382b41149b7826fa948d5a98cd8d7b","modified":1613036127819},{"_id":"public/archives/2021/02/index.html","hash":"0ba0ac25b8f4968f748955665451705ee9dfcd72","modified":1613036127819},{"_id":"public/index.html","hash":"e1790ad7f57ac7cde8346ceefa17c84761f16db9","modified":1613036127819},{"_id":"public/tags/C/index.html","hash":"a939e3857bd55885c56de77f3297b2123a24b138","modified":1613036127819},{"_id":"public/tags/随笔/index.html","hash":"13688547e9c562284347258c23b44c8c95d63b05","modified":1613036127819},{"_id":"public/tags/Python/index.html","hash":"3c012bbb0bc356331ae1ba06a6af6dccba615708","modified":1613036127819},{"_id":"public/css/images/favicon.png","hash":"f4634b23a5bba0c47a4a8a40f42c71e283312e17","modified":1613036127819},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1613036127819},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1613036127819},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1613036127819},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1613036127819},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1613036127819},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1613036127819},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1613036127819},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1613036127819},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1613036127819},{"_id":"public/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1613036127819},{"_id":"public/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1613036127819},{"_id":"public/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1613036127819},{"_id":"public/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1613036127819}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"vector及其派生容器","date":"2021-02-06T13:36:17.000Z","_content":"\n# 1.vector(向量)\n\n## 1.1 导入\n\n导入\n\n```c++\n#include<vector>\n```\n## 1.2 定义\n\n```c++\n//定义具有10个整型元素的向量（尖括号为元素类型名，它可以是任何合法的数据类型），不具有初值，其值不确定\nvector<int>a(10);\n\n//定义具有10个整型元素的向量，且给出的每个元素初值为1\nvector<int>a(10,1);\n\n//用向量b给向量a赋值，a的值完全等价于b的值\nvector<int>a(b);\n\n//将向量b中从0-2（共三个）的元素赋值给a，a的类型为int型\nvector<int>a(b.begin(),b.begin+3);\n\nint b[7]={1,2,3,4,5,6,7};\nvector<int> a(b,b+7）;\n```\n\n## 1.3 使用\n\n```++\n#include<vector>\nvector<int> a,b;\n//b为向量，将b的0-2个元素赋值给向量a\na.assign(b.begin(),b.begin()+3);\n//a含有4个值为2的元素\na.assign(4,2);\n//返回a的最后一个元素\na.back();\n//返回a的第一个元素\na.front();\n//返回a的第i元素,当且仅当a存在\na[i];\n//清空a中的元素\na.clear();\n//判断a是否为空，空则返回true，非空则返回false\na.empty();\n//删除a向量的最后一个元素\na.pop_back();\n//删除a中第一个（从第0个算起）到第二个元素，也就是说删除的元素从a.begin()+1算起（包括它）一直到a.begin()+3（不包括它）结束\na.erase(a.begin()+1,a.begin()+3);\n//在a的最后一个向量后插入一个元素，其值为5\na.push_back(5);\n//在a的第一个元素（从第0个算起）位置插入数值5,\na.insert(a.begin()+1,5);\n//在a的第一个元素（从第0个算起）位置插入3个数，其值都为5\na.insert(a.begin()+1,3,5);\n//b为数组，在a的第一个元素（从第0个元素算起）的位置插入b的第三个元素到第5个元素（不包括b+6）\na.insert(a.begin()+1,b+3,b+6);\n//返回a中元素的个数\na.size();\n//返回a在内存中总共可以容纳的元素个数\na.capacity();\n//将a的现有元素个数调整至10个，多则删，少则补，其值随机\na.resize(10);\n//将a的现有元素个数调整至10个，多则删，少则补，其值为2\na.resize(10,2);\n//将a的容量扩充至100，\na.reserve(100);\n//b为向量，将a中的元素和b中的元素整体交换\na.swap(b);\n//b为向量，向量的比较操作还有 != >= > <= <\na==b;\n```\n\n## 1.3 常用算法\n\n```c++\n#include<algorithm>\n//对a中的从a.begin()（包括它）到a.end()（不包括它）的元素进行从小到大排列\nsort(a.begin(),a.end());\n//对a中的从a.begin()（包括它）到a.end()（不包括它）的元素倒置，但不排列，如a中元素为1,3,2,4,倒置后为4,2,3,1\nreverse(a.begin(),a.end());\n//把a中的从a.begin()（包括它）到a.end()（不包括它）的元素复制到b中，从b.begin()+1的位置（包括它）开始复制，覆盖掉原有元素\ncopy(a.begin(),a.end(),b.begin()+1);\n//在a中的从a.begin()（包括它）到a.end()（不包括它）的元素中查找10，若存在返回其在向量中的位置\nfind(a.begin(),a.end(),10);\n```\n\n\n\n# 2.队列和栈\n\n## 2.1 导入\n\n```c++\n#include<queue>// 队列 \n#include<stack>//栈\n```\n\n## 2.2 定义\n\n其实和vector差不多\n\n```c++\nstack<int>  s;//参数也是数据类型，这是栈的定义方式\nqueue<int>  q; //参数是数据类型，这是队列的定义方式\n```\n\n## 2.3 常用操作\n\n（这俩其实差不离）\n\n```c++\n//栈：\ns.empty()//如果栈为空返回true，否则返回false  \ns.size()//返回栈中元素的个数  \ns.pop()//删除栈顶元素但不返回其值  \ns.top()//返回栈顶的元素，但不删除该元素  \ns.push(X)//在栈顶压入新元素 ，参数X为要压入的元素\n```\n\n```c++\n//队列：\nq.empty()// 如果队列为空返回true，否则返回false  \nq.size() // 返回队列中元素的个数  \nq.pop()  //删除队列首元素但不返回其值  \nq.front()  // 返回队首元素的值，但不删除该元素  \nq.push(X) //在队尾压入新元素 ，X为要压入的元素\nq.back() //返回队列尾元素的值，但不删除该元素  \n```\n\n\n\n\n\n\n\n","source":"_posts/vector.md","raw":"---\ntitle: vector及其派生容器\ndate: 2021-02-06 21:36:17\ntags: C++\n---\n\n# 1.vector(向量)\n\n## 1.1 导入\n\n导入\n\n```c++\n#include<vector>\n```\n## 1.2 定义\n\n```c++\n//定义具有10个整型元素的向量（尖括号为元素类型名，它可以是任何合法的数据类型），不具有初值，其值不确定\nvector<int>a(10);\n\n//定义具有10个整型元素的向量，且给出的每个元素初值为1\nvector<int>a(10,1);\n\n//用向量b给向量a赋值，a的值完全等价于b的值\nvector<int>a(b);\n\n//将向量b中从0-2（共三个）的元素赋值给a，a的类型为int型\nvector<int>a(b.begin(),b.begin+3);\n\nint b[7]={1,2,3,4,5,6,7};\nvector<int> a(b,b+7）;\n```\n\n## 1.3 使用\n\n```++\n#include<vector>\nvector<int> a,b;\n//b为向量，将b的0-2个元素赋值给向量a\na.assign(b.begin(),b.begin()+3);\n//a含有4个值为2的元素\na.assign(4,2);\n//返回a的最后一个元素\na.back();\n//返回a的第一个元素\na.front();\n//返回a的第i元素,当且仅当a存在\na[i];\n//清空a中的元素\na.clear();\n//判断a是否为空，空则返回true，非空则返回false\na.empty();\n//删除a向量的最后一个元素\na.pop_back();\n//删除a中第一个（从第0个算起）到第二个元素，也就是说删除的元素从a.begin()+1算起（包括它）一直到a.begin()+3（不包括它）结束\na.erase(a.begin()+1,a.begin()+3);\n//在a的最后一个向量后插入一个元素，其值为5\na.push_back(5);\n//在a的第一个元素（从第0个算起）位置插入数值5,\na.insert(a.begin()+1,5);\n//在a的第一个元素（从第0个算起）位置插入3个数，其值都为5\na.insert(a.begin()+1,3,5);\n//b为数组，在a的第一个元素（从第0个元素算起）的位置插入b的第三个元素到第5个元素（不包括b+6）\na.insert(a.begin()+1,b+3,b+6);\n//返回a中元素的个数\na.size();\n//返回a在内存中总共可以容纳的元素个数\na.capacity();\n//将a的现有元素个数调整至10个，多则删，少则补，其值随机\na.resize(10);\n//将a的现有元素个数调整至10个，多则删，少则补，其值为2\na.resize(10,2);\n//将a的容量扩充至100，\na.reserve(100);\n//b为向量，将a中的元素和b中的元素整体交换\na.swap(b);\n//b为向量，向量的比较操作还有 != >= > <= <\na==b;\n```\n\n## 1.3 常用算法\n\n```c++\n#include<algorithm>\n//对a中的从a.begin()（包括它）到a.end()（不包括它）的元素进行从小到大排列\nsort(a.begin(),a.end());\n//对a中的从a.begin()（包括它）到a.end()（不包括它）的元素倒置，但不排列，如a中元素为1,3,2,4,倒置后为4,2,3,1\nreverse(a.begin(),a.end());\n//把a中的从a.begin()（包括它）到a.end()（不包括它）的元素复制到b中，从b.begin()+1的位置（包括它）开始复制，覆盖掉原有元素\ncopy(a.begin(),a.end(),b.begin()+1);\n//在a中的从a.begin()（包括它）到a.end()（不包括它）的元素中查找10，若存在返回其在向量中的位置\nfind(a.begin(),a.end(),10);\n```\n\n\n\n# 2.队列和栈\n\n## 2.1 导入\n\n```c++\n#include<queue>// 队列 \n#include<stack>//栈\n```\n\n## 2.2 定义\n\n其实和vector差不多\n\n```c++\nstack<int>  s;//参数也是数据类型，这是栈的定义方式\nqueue<int>  q; //参数是数据类型，这是队列的定义方式\n```\n\n## 2.3 常用操作\n\n（这俩其实差不离）\n\n```c++\n//栈：\ns.empty()//如果栈为空返回true，否则返回false  \ns.size()//返回栈中元素的个数  \ns.pop()//删除栈顶元素但不返回其值  \ns.top()//返回栈顶的元素，但不删除该元素  \ns.push(X)//在栈顶压入新元素 ，参数X为要压入的元素\n```\n\n```c++\n//队列：\nq.empty()// 如果队列为空返回true，否则返回false  \nq.size() // 返回队列中元素的个数  \nq.pop()  //删除队列首元素但不返回其值  \nq.front()  // 返回队首元素的值，但不删除该元素  \nq.push(X) //在队尾压入新元素 ，X为要压入的元素\nq.back() //返回队列尾元素的值，但不删除该元素  \n```\n\n\n\n\n\n\n\n","slug":"vector","published":1,"updated":"2021-02-11T09:28:48.247Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckl0o2ac40000io8d5nnl4vkr","content":"<h1 id=\"1-vector-向量\"><a href=\"#1-vector-向量\" class=\"headerlink\" title=\"1.vector(向量)\"></a>1.vector(向量)</h1><h2 id=\"1-1-导入\"><a href=\"#1-1-导入\" class=\"headerlink\" title=\"1.1 导入\"></a>1.1 导入</h2><p>导入</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"1-2-定义\"><a href=\"#1-2-定义\" class=\"headerlink\" title=\"1.2 定义\"></a>1.2 定义</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义具有10个整型元素的向量（尖括号为元素类型名，它可以是任何合法的数据类型），不具有初值，其值不确定</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;a(<span class=\"number\">10</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义具有10个整型元素的向量，且给出的每个元素初值为1</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;a(<span class=\"number\">10</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用向量b给向量a赋值，a的值完全等价于b的值</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;a(b);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//将向量b中从0-2（共三个）的元素赋值给a，a的类型为int型</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;a(b.begin(),b.begin+<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> b[<span class=\"number\">7</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">a</span><span class=\"params\">(b,b+<span class=\"number\">7</span>）;</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"1-3-使用\"><a href=\"#1-3-使用\" class=\"headerlink\" title=\"1.3 使用\"></a>1.3 使用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;vector&gt;</span><br><span class=\"line\">vector&lt;int&gt; a,b;</span><br><span class=\"line\">&#x2F;&#x2F;b为向量，将b的0-2个元素赋值给向量a</span><br><span class=\"line\">a.assign(b.begin(),b.begin()+3);</span><br><span class=\"line\">&#x2F;&#x2F;a含有4个值为2的元素</span><br><span class=\"line\">a.assign(4,2);</span><br><span class=\"line\">&#x2F;&#x2F;返回a的最后一个元素</span><br><span class=\"line\">a.back();</span><br><span class=\"line\">&#x2F;&#x2F;返回a的第一个元素</span><br><span class=\"line\">a.front();</span><br><span class=\"line\">&#x2F;&#x2F;返回a的第i元素,当且仅当a存在</span><br><span class=\"line\">a[i];</span><br><span class=\"line\">&#x2F;&#x2F;清空a中的元素</span><br><span class=\"line\">a.clear();</span><br><span class=\"line\">&#x2F;&#x2F;判断a是否为空，空则返回true，非空则返回false</span><br><span class=\"line\">a.empty();</span><br><span class=\"line\">&#x2F;&#x2F;删除a向量的最后一个元素</span><br><span class=\"line\">a.pop_back();</span><br><span class=\"line\">&#x2F;&#x2F;删除a中第一个（从第0个算起）到第二个元素，也就是说删除的元素从a.begin()+1算起（包括它）一直到a.begin()+3（不包括它）结束</span><br><span class=\"line\">a.erase(a.begin()+1,a.begin()+3);</span><br><span class=\"line\">&#x2F;&#x2F;在a的最后一个向量后插入一个元素，其值为5</span><br><span class=\"line\">a.push_back(5);</span><br><span class=\"line\">&#x2F;&#x2F;在a的第一个元素（从第0个算起）位置插入数值5,</span><br><span class=\"line\">a.insert(a.begin()+1,5);</span><br><span class=\"line\">&#x2F;&#x2F;在a的第一个元素（从第0个算起）位置插入3个数，其值都为5</span><br><span class=\"line\">a.insert(a.begin()+1,3,5);</span><br><span class=\"line\">&#x2F;&#x2F;b为数组，在a的第一个元素（从第0个元素算起）的位置插入b的第三个元素到第5个元素（不包括b+6）</span><br><span class=\"line\">a.insert(a.begin()+1,b+3,b+6);</span><br><span class=\"line\">&#x2F;&#x2F;返回a中元素的个数</span><br><span class=\"line\">a.size();</span><br><span class=\"line\">&#x2F;&#x2F;返回a在内存中总共可以容纳的元素个数</span><br><span class=\"line\">a.capacity();</span><br><span class=\"line\">&#x2F;&#x2F;将a的现有元素个数调整至10个，多则删，少则补，其值随机</span><br><span class=\"line\">a.resize(10);</span><br><span class=\"line\">&#x2F;&#x2F;将a的现有元素个数调整至10个，多则删，少则补，其值为2</span><br><span class=\"line\">a.resize(10,2);</span><br><span class=\"line\">&#x2F;&#x2F;将a的容量扩充至100，</span><br><span class=\"line\">a.reserve(100);</span><br><span class=\"line\">&#x2F;&#x2F;b为向量，将a中的元素和b中的元素整体交换</span><br><span class=\"line\">a.swap(b);</span><br><span class=\"line\">&#x2F;&#x2F;b为向量，向量的比较操作还有 !&#x3D; &gt;&#x3D; &gt; &lt;&#x3D; &lt;</span><br><span class=\"line\">a&#x3D;&#x3D;b;</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-3-常用算法\"><a href=\"#1-3-常用算法\" class=\"headerlink\" title=\"1.3 常用算法\"></a>1.3 常用算法</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">//对a中的从a.begin()（包括它）到a.end()（不包括它）的元素进行从小到大排列</span></span><br><span class=\"line\">sort(a.begin(),a.end());</span><br><span class=\"line\"><span class=\"comment\">//对a中的从a.begin()（包括它）到a.end()（不包括它）的元素倒置，但不排列，如a中元素为1,3,2,4,倒置后为4,2,3,1</span></span><br><span class=\"line\">reverse(a.begin(),a.end());</span><br><span class=\"line\"><span class=\"comment\">//把a中的从a.begin()（包括它）到a.end()（不包括它）的元素复制到b中，从b.begin()+1的位置（包括它）开始复制，覆盖掉原有元素</span></span><br><span class=\"line\">copy(a.begin(),a.end(),b.begin()+<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">//在a中的从a.begin()（包括它）到a.end()（不包括它）的元素中查找10，若存在返回其在向量中的位置</span></span><br><span class=\"line\">find(a.begin(),a.end(),<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"2-队列和栈\"><a href=\"#2-队列和栈\" class=\"headerlink\" title=\"2.队列和栈\"></a>2.队列和栈</h1><h2 id=\"2-1-导入\"><a href=\"#2-1-导入\" class=\"headerlink\" title=\"2.1 导入\"></a>2.1 导入</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;// 队列 </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stack&gt;//栈</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-2-定义\"><a href=\"#2-2-定义\" class=\"headerlink\" title=\"2.2 定义\"></a>2.2 定义</h2><p>其实和vector差不多</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt;  s;<span class=\"comment\">//参数也是数据类型，这是栈的定义方式</span></span><br><span class=\"line\"><span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt;  q; <span class=\"comment\">//参数是数据类型，这是队列的定义方式</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-3-常用操作\"><a href=\"#2-3-常用操作\" class=\"headerlink\" title=\"2.3 常用操作\"></a>2.3 常用操作</h2><p>（这俩其实差不离）</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//栈：</span></span><br><span class=\"line\">s.empty()<span class=\"comment\">//如果栈为空返回true，否则返回false  </span></span><br><span class=\"line\">s.size()<span class=\"comment\">//返回栈中元素的个数  </span></span><br><span class=\"line\">s.pop()<span class=\"comment\">//删除栈顶元素但不返回其值  </span></span><br><span class=\"line\">s.top()<span class=\"comment\">//返回栈顶的元素，但不删除该元素  </span></span><br><span class=\"line\">s.push(X)<span class=\"comment\">//在栈顶压入新元素 ，参数X为要压入的元素</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//队列：</span></span><br><span class=\"line\">q.empty()<span class=\"comment\">// 如果队列为空返回true，否则返回false  </span></span><br><span class=\"line\">q.size() <span class=\"comment\">// 返回队列中元素的个数  </span></span><br><span class=\"line\">q.pop()  <span class=\"comment\">//删除队列首元素但不返回其值  </span></span><br><span class=\"line\">q.front()  <span class=\"comment\">// 返回队首元素的值，但不删除该元素  </span></span><br><span class=\"line\">q.push(X) <span class=\"comment\">//在队尾压入新元素 ，X为要压入的元素</span></span><br><span class=\"line\">q.back() <span class=\"comment\">//返回队列尾元素的值，但不删除该元素  </span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"1-vector-向量\"><a href=\"#1-vector-向量\" class=\"headerlink\" title=\"1.vector(向量)\"></a>1.vector(向量)</h1><h2 id=\"1-1-导入\"><a href=\"#1-1-导入\" class=\"headerlink\" title=\"1.1 导入\"></a>1.1 导入</h2><p>导入</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;vector&gt;</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"1-2-定义\"><a href=\"#1-2-定义\" class=\"headerlink\" title=\"1.2 定义\"></a>1.2 定义</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义具有10个整型元素的向量（尖括号为元素类型名，它可以是任何合法的数据类型），不具有初值，其值不确定</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;a(<span class=\"number\">10</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//定义具有10个整型元素的向量，且给出的每个元素初值为1</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;a(<span class=\"number\">10</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//用向量b给向量a赋值，a的值完全等价于b的值</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;a(b);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//将向量b中从0-2（共三个）的元素赋值给a，a的类型为int型</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;a(b.begin(),b.begin+<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> b[<span class=\"number\">7</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; <span class=\"title\">a</span><span class=\"params\">(b,b+<span class=\"number\">7</span>）;</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"1-3-使用\"><a href=\"#1-3-使用\" class=\"headerlink\" title=\"1.3 使用\"></a>1.3 使用</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;vector&gt;</span><br><span class=\"line\">vector&lt;int&gt; a,b;</span><br><span class=\"line\">&#x2F;&#x2F;b为向量，将b的0-2个元素赋值给向量a</span><br><span class=\"line\">a.assign(b.begin(),b.begin()+3);</span><br><span class=\"line\">&#x2F;&#x2F;a含有4个值为2的元素</span><br><span class=\"line\">a.assign(4,2);</span><br><span class=\"line\">&#x2F;&#x2F;返回a的最后一个元素</span><br><span class=\"line\">a.back();</span><br><span class=\"line\">&#x2F;&#x2F;返回a的第一个元素</span><br><span class=\"line\">a.front();</span><br><span class=\"line\">&#x2F;&#x2F;返回a的第i元素,当且仅当a存在</span><br><span class=\"line\">a[i];</span><br><span class=\"line\">&#x2F;&#x2F;清空a中的元素</span><br><span class=\"line\">a.clear();</span><br><span class=\"line\">&#x2F;&#x2F;判断a是否为空，空则返回true，非空则返回false</span><br><span class=\"line\">a.empty();</span><br><span class=\"line\">&#x2F;&#x2F;删除a向量的最后一个元素</span><br><span class=\"line\">a.pop_back();</span><br><span class=\"line\">&#x2F;&#x2F;删除a中第一个（从第0个算起）到第二个元素，也就是说删除的元素从a.begin()+1算起（包括它）一直到a.begin()+3（不包括它）结束</span><br><span class=\"line\">a.erase(a.begin()+1,a.begin()+3);</span><br><span class=\"line\">&#x2F;&#x2F;在a的最后一个向量后插入一个元素，其值为5</span><br><span class=\"line\">a.push_back(5);</span><br><span class=\"line\">&#x2F;&#x2F;在a的第一个元素（从第0个算起）位置插入数值5,</span><br><span class=\"line\">a.insert(a.begin()+1,5);</span><br><span class=\"line\">&#x2F;&#x2F;在a的第一个元素（从第0个算起）位置插入3个数，其值都为5</span><br><span class=\"line\">a.insert(a.begin()+1,3,5);</span><br><span class=\"line\">&#x2F;&#x2F;b为数组，在a的第一个元素（从第0个元素算起）的位置插入b的第三个元素到第5个元素（不包括b+6）</span><br><span class=\"line\">a.insert(a.begin()+1,b+3,b+6);</span><br><span class=\"line\">&#x2F;&#x2F;返回a中元素的个数</span><br><span class=\"line\">a.size();</span><br><span class=\"line\">&#x2F;&#x2F;返回a在内存中总共可以容纳的元素个数</span><br><span class=\"line\">a.capacity();</span><br><span class=\"line\">&#x2F;&#x2F;将a的现有元素个数调整至10个，多则删，少则补，其值随机</span><br><span class=\"line\">a.resize(10);</span><br><span class=\"line\">&#x2F;&#x2F;将a的现有元素个数调整至10个，多则删，少则补，其值为2</span><br><span class=\"line\">a.resize(10,2);</span><br><span class=\"line\">&#x2F;&#x2F;将a的容量扩充至100，</span><br><span class=\"line\">a.reserve(100);</span><br><span class=\"line\">&#x2F;&#x2F;b为向量，将a中的元素和b中的元素整体交换</span><br><span class=\"line\">a.swap(b);</span><br><span class=\"line\">&#x2F;&#x2F;b为向量，向量的比较操作还有 !&#x3D; &gt;&#x3D; &gt; &lt;&#x3D; &lt;</span><br><span class=\"line\">a&#x3D;&#x3D;b;</span><br></pre></td></tr></table></figure>\n<h2 id=\"1-3-常用算法\"><a href=\"#1-3-常用算法\" class=\"headerlink\" title=\"1.3 常用算法\"></a>1.3 常用算法</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">//对a中的从a.begin()（包括它）到a.end()（不包括它）的元素进行从小到大排列</span></span><br><span class=\"line\">sort(a.begin(),a.end());</span><br><span class=\"line\"><span class=\"comment\">//对a中的从a.begin()（包括它）到a.end()（不包括它）的元素倒置，但不排列，如a中元素为1,3,2,4,倒置后为4,2,3,1</span></span><br><span class=\"line\">reverse(a.begin(),a.end());</span><br><span class=\"line\"><span class=\"comment\">//把a中的从a.begin()（包括它）到a.end()（不包括它）的元素复制到b中，从b.begin()+1的位置（包括它）开始复制，覆盖掉原有元素</span></span><br><span class=\"line\">copy(a.begin(),a.end(),b.begin()+<span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"comment\">//在a中的从a.begin()（包括它）到a.end()（不包括它）的元素中查找10，若存在返回其在向量中的位置</span></span><br><span class=\"line\">find(a.begin(),a.end(),<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"2-队列和栈\"><a href=\"#2-队列和栈\" class=\"headerlink\" title=\"2.队列和栈\"></a>2.队列和栈</h1><h2 id=\"2-1-导入\"><a href=\"#2-1-导入\" class=\"headerlink\" title=\"2.1 导入\"></a>2.1 导入</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;// 队列 </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stack&gt;//栈</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-2-定义\"><a href=\"#2-2-定义\" class=\"headerlink\" title=\"2.2 定义\"></a>2.2 定义</h2><p>其实和vector差不多</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">stack</span>&lt;<span class=\"keyword\">int</span>&gt;  s;<span class=\"comment\">//参数也是数据类型，这是栈的定义方式</span></span><br><span class=\"line\"><span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt;  q; <span class=\"comment\">//参数是数据类型，这是队列的定义方式</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-3-常用操作\"><a href=\"#2-3-常用操作\" class=\"headerlink\" title=\"2.3 常用操作\"></a>2.3 常用操作</h2><p>（这俩其实差不离）</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//栈：</span></span><br><span class=\"line\">s.empty()<span class=\"comment\">//如果栈为空返回true，否则返回false  </span></span><br><span class=\"line\">s.size()<span class=\"comment\">//返回栈中元素的个数  </span></span><br><span class=\"line\">s.pop()<span class=\"comment\">//删除栈顶元素但不返回其值  </span></span><br><span class=\"line\">s.top()<span class=\"comment\">//返回栈顶的元素，但不删除该元素  </span></span><br><span class=\"line\">s.push(X)<span class=\"comment\">//在栈顶压入新元素 ，参数X为要压入的元素</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//队列：</span></span><br><span class=\"line\">q.empty()<span class=\"comment\">// 如果队列为空返回true，否则返回false  </span></span><br><span class=\"line\">q.size() <span class=\"comment\">// 返回队列中元素的个数  </span></span><br><span class=\"line\">q.pop()  <span class=\"comment\">//删除队列首元素但不返回其值  </span></span><br><span class=\"line\">q.front()  <span class=\"comment\">// 返回队首元素的值，但不删除该元素  </span></span><br><span class=\"line\">q.push(X) <span class=\"comment\">//在队尾压入新元素 ，X为要压入的元素</span></span><br><span class=\"line\">q.back() <span class=\"comment\">//返回队列尾元素的值，但不删除该元素  </span></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n"},{"title":"新年快乐","date":"2021-02-11T09:31:34.000Z","_content":"\n# 祝大家2021年牛年快乐！\n\n祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光\n风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光\n风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你们新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光\n风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光\n风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你们新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光\n风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光\n风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 ","source":"_posts/新年快乐.md","raw":"---\ntitle: 新年快乐\ndate: 2021-02-11 17:31:34\ntags: 随笔\n---\n\n# 祝大家2021年牛年快乐！\n\n祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光\n风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光\n风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你们新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光\n风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光\n风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你们新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光\n风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光\n风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 ","slug":"新年快乐","published":1,"updated":"2021-02-11T09:32:47.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckl0o2ac90001io8dbzbnc6k6","content":"<h1 id=\"祝大家2021年牛年快乐！\"><a href=\"#祝大家2021年牛年快乐！\" class=\"headerlink\" title=\"祝大家2021年牛年快乐！\"></a>祝大家2021年牛年快乐！</h1><p>祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光<br>风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光<br>风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你们新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光<br>风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光<br>风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你们新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光<br>风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光<br>风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"祝大家2021年牛年快乐！\"><a href=\"#祝大家2021年牛年快乐！\" class=\"headerlink\" title=\"祝大家2021年牛年快乐！\"></a>祝大家2021年牛年快乐！</h1><p>祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光<br>风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光<br>风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你们新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光<br>风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光<br>风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你们新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光<br>风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 龙马精神 万事如意 百尺竿红红火火 事业有成 心想事成 一帆风顺国家兴旺 民众安康 国家安庆 人寿安康祝你新年快乐 学业有成 福星高照 万事如意日月皆春 江山永固 祖国长春 红梅献岁喜鹊鸣春 花香四季 月满一轮 花迎春光新春快乐 福寿安康 岁岁平安 年年有余恭喜发财 财源亨通 金玉满堂 喜气洋洋万事如意 大吉大利 三阳开泰 财源广进牛耕绿野 虎啸青山 无边春舍 有福人家四时喜庆 五谷丰登 四时如意 万事遂心龙吟国瑞 虎啸年丰 龙兴华夏 燕舞新春平安无恙 吉庆有余 百花献瑞 百花齐放福星高照 恭贺新春 吉庆有余 福享新春喜气盈门 岁且更始 时乃日新 三阳开泰励精图治 革故鼎新 抬头见喜 举步迎春空谈误国 实干兴邦 国光蔚起 民气昭苏财源广进 恭贺新禧 吉星高照 恭喜发财心想事成 五福临门 五谷丰登 迎春接福春光骀荡 国步龙腾 门凝瑞霭 户发春光<br>风光胜旧 岁序更新 天翔紫燕 地暖春风天高地阔 人寿年丰 天开淑景 人乐丰年万物回春 天开化宇 人在春台 一门瑞气万里春风 春回柳叶 赋献梅花 千祥云集百福骈臻 人登寿域 世跻春台 椒花献颂万马奔腾 全家福气 满院春光 庆云跃日金玉满堂 龙凤呈祥 龙门精神 百业兴旺芳草迎春 江山秀丽 人物风流 江山如画吉星高照 吉祥如意 开春大吉 五谷丰登五福临门 万事顺利 万事顺意 六蓄兴旺荣华富贵 金玉满堂 鹏程万里 笑逐颜开 心旷神怡 莺歌燕舞 招财进宝财源广进 阖家欢乐 飞黄腾达 万事顺意幸福美满 官运亨通 美梦连连 万事顺利恭贺春节 恭贺新喜 恭贺新禧 官运亨通阖家欢乐 龙凤呈祥 龙门精神 红红火火二龙腾飞 三阳开泰 四季平安 五福临门六六大顺 七星高照 八方来财 九九同心官运亨通 美梦连连 万事顺利 荣华富贵荣华富贵 一帆风顺 金玉满堂 龙凤呈祥新年快乐 </p>\n"},{"title":"xingyunlib","date":"2021-02-06T02:06:56.000Z","_content":"\n# xingyunlib\n[toc]\n\n开发者：严子昱|崔轩宇\n\nv1.2.20201004\n\n#v1.2.xx以后全是正式版#\n\n#hack-20201004:修复xesuser故障\n\n版权所有，侵权必究\n\n内置函数 导入方式：\n\n```python\nfrom xingyunlib import *\n```\n### 加密函数\n\n```python\nmd=md5(\"111\")#作用：用MD5加密\"111\"，返回一个字符串\ns1=sha1(\"111\")#作用：用sha1加密\"111\"，返回一个字符串\ns256=sha256(\"111\")#作用：用sha1加密\"111\"，返回一个字符串\n```\n\n### 颜色类\n\n```python\ncolor=colorX(颜色,传进去的颜色类型)#类型支持\"rgb\",\"hsv\",\"hex\"\n#示例：\ncolor=colorX((100,100,100),\"rgb\")\n```\n\n#### color.color\n\n返回颜色\n\n```python\nz=color.color\n```\n\n#### color_to(to_color,change=False)\n\n返回一个要转换的颜色\n\nto_color:转换的颜色，类型支持\"rgb\",\"hsv\",\"hex\"\n\nchange：是否更改原来的颜色\n\n```python\ncolor=colorX((255,255,255),\"rgb\")#实例化rgb\ncolor.color_to(\"hex\",True)#更改进制为16进制\nprint(color.color)#打印出color.color\n```\n\n\n\n# all（一次性导入扩展！可能出现覆盖现象！）\n\n## 使用方式\n\n```python\nfrom xingyunlib.all import*\n#或者\nimport xingyunlib.all as xingyunlib\n```\n\n# print_format（print格式化扩展）\n\n开发者：严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib.print_format import*\n```\n\n\n\n### print() \n\n```python\nprint(*str,t=0,sepr=\" \",end=\"\\n\") \n```\n\n\n我们来逐个讲解他们的用法 \n\n首先来看t参数： \nt=每个字停留的时间(默认为不停留) \n比如说，要每个字停留1秒，输出\"nice\"的代码如下： \n`print(\"nice\",t=1)` \n\n然后我们来看end参数 \n这个end参数其实和原来print的end参数是同样的作用 \n默认是\"\\n\"(换行符) \n\n最后我们看sepr参数，这个参数也是和原来print的sepr是同样的作用 \n我们来看一个例子： \n`print(\"ni\",\"e\",sepr=\"c\")` \n最后输出的就是“nice” \n\n我们来看大家这个很关心的变色简洁方式 \n我们在变色具体支持这些颜色： \n红、白、绿、蓝、黄、青、紫 \n用法如下（注意是两个斜杠）： \n'\\\\'+颜色（字的颜色变化） \n'\\\\l'+颜色（字的颜色变化,亮色）\n'\\\\b'+颜色（字的背景变化） \n'\\\\bl'+颜色（字的背景变化,亮色） \n'\\\\'(去除所有的变色效果) \n\n### clear_os()\n\n```python\nclear_os()\n```\n\n清除屏幕上的所有文字\n\n# xes更改（去除xeslib里面所有的print）\n\n最新版本的xingyunlib增加了xeslib的内容\n\n## 导入方式\n\n```python\nfrom xingyunlib.xes import xeslib里面的库名\n```\n\n更改：\n\n把xeslib里面所有的print都去了\n\n修改AIspeak.speak函数\n\n```python\nfrom xingyunlib.xes import AIspeak\nxes.AIspeak.speak(\"hello python!\",\"file.mp3\")\n\"\"\"\n本程序作用：\n将hello python！\n保存到file.mp3音频文件里面，并且不播放\n\"\"\"\nxes.AIspeak.speak(\"hello python!\")\n\"\"\"\n本程序作用：\n播放hello python！这段音频\n\"\"\"\n```\n\n# xesapp（获取学而思站上某个作品的数据！已修复！）\n\n开发者：严子昱|崔轩语\n\n## 导入方式\n\n```python\nfrom xingyunlib.xesapp import*\n```\n\n\n\n### xesapp(url)\n\n```python\n<xesapp>=xesapp(url)\n```\n\n构建一个运行对象\nurl为学而思里面的py作品网址\n\n接下来讲这个类的方法：\n\n\n##### get_hot()<u></u>\n\n返回作品的热度\n\n```python\nprint(xesapp.get_hot())\n```\n\n##### get_cover()\n\n返回作品封面的url\n\n```python\nprint(xesapp.get_cover())\n```\n\n##### load_cover(filename)\n\n下载作品封面到filename\n\n```python\nxesapp.load_cover(\"\")\n```\n\n##### get_view()\n\n返回作品的观看人数\n\n```python\nprint(xesapp.get_view())\n```\n\n##### get_hot()\n\n返回作品的热度\n\n```python\nprint(xesapp.get_hot())\n```\n\n##### get_like()\n\n返回作品的点赞数\n\n```python\nprint(xesapp.get_like())\n```\n\n##### get_unlike()\n\n返回作品的点踩数\n\n```python\nprint(xesapp.get_unlike())\n```\n\n##### load_file(cache = \"\")\n\n默认下载作品源文件到工作目录\n如果cache不为空择下载到这个文件夹\n\n```python\nxesapp.load_file()\n```\n\n##### is_like()\n\n判断在程序运行这个作品有没有人点赞\n返回一个bool值\nTrue：点赞了\nFalse：点踩了\nNone：没有点赞也没有点踩\n\n```python\nif xesapp.is_like == True:\n    print(\"点赞了\")\nelif xesapp.is_like == False:\n    print(\"点踩了\")\nelse:\n    print(\"什么都没点\")\n```\n\n##### run_app()\n\n运行这个作品\n\n```python\nexec(xesapp.run_app())\n```\n\n\n##### get_published()\n\n获取作品第一次保存时间\n\n```python\nprint(xesapp.get_published())\n```\n\n##### get_modified()\n\n获取作品最后一次更新时间\n\n```python\nprint(xesapp.get_modified())\n```\n\n##### is_hidden_code()\n\n获取作品是否隐藏代码\n\n```python\nif xesapp.is_hidden_code():\n    print(\"作品的代码隐藏了\")\nelse:\n    print(\"作品的代码没有隐藏\")\n```\n\n##### get_description()\n\n获取作品的说明\n\n```python\nprint(xesapp.get_description())\n```\n\n##### get_comments()\n\n获取作品一共有多少人评论\n\n```python\nprint(xesapp.get_comments())\n```\n\n##### is_comments()\n\n获取从这个作品初始化到现在是否有人评论\n\n```python\nif xesapp.is_comments():\n    print(\"评论了\")\nelse:\n    print(\"没有评论\")\n```\n## cmt(url)\n\n这个是一个获取评论的api\n\n### dta_dic\n\n```python\n#获取一个包含所有评论的列表\na=cmt(\"http://code.xueersi.com/home/project/detail?lang=code&pid=9785566&version=offline&form=python&langType=python\")\nprint(a.dta_dic)\n#输出\n\"\"\"\n（略）\n\"\"\"\n```\n\n### fmt（）\n\n```python\n#返回一个字符串（评论的字符格式化）\na=cmt(\"http://code.xueersi.com/home/project/detail?lang=code&pid=9785566&version=offline&form=python&langType=python\")\nprint(a.fmt())\n#部分输出\n\"\"\"\n[2020-10-17 20:52:11]\n\t一维回复严子昱:快点=-=不取关就pen你\n\n[2020-10-17 20:51:31]\n\t一维回复严子昱:有时关注我这个人，并不是太好的选择\n\t取关我吧，有事请加qq：3456198711\n\t微信：huiyu431249891\n\n[2020-10-17 18:34:35]\n\t俊翔回复严子昱:作者是喜欢互关吗？居然关注我这样的蚂蚁，太感动了\n\n[2020-10-15 21:56:11]\n\t陈奕翰回复严子昱:考虑合作嘛\n\t\n\n[2020-10-10 19:29:26]\n\t茜幻回复严子昱:作者在吗\n\n[2020-10-10 19:10:42]\n\t蒋狄璁回复严子昱:互关\n\n.......(略)\n\"\"\"\n\n```\n\n### sorted（by=“likes”,reverse=True）\n\n```python\n#设置排序\na=cmt(\"http://code.xueersi.com/home/project/detail?lang=code&pid=9785566&version=offline&form=python&langType=python\")\na.sorted(by=\"likes\",reverse=True)#reverse为 从高到低排列\nprint(a.fmt())\n\n\"\"\"\n[2020-10-15 21:56:11]\n\t陈奕翰回复严子昱:考虑合作嘛\n\t\n\n[2020-10-17 20:52:11]\n\t一维回复严子昱:快点=-=不取关就pen你\n\n[2020-10-17 18:34:35]\n\t俊翔回复严子昱:作者是喜欢互关吗？居然关注我这样的蚂蚁，太感动了\n\n[2020-10-01 20:51:57]\n\t王玎珰回复严子昱:啊这\n...（略）\n\"\"\"\n\n\n```\n\n\n\n# **xesuser（获取学而思站上某个用户的数据！已修复！）**\n\n<u>***注意！！***</u>\n\n<u>***千万一定不要超高频率请求，否则会报错！！！***</u>\n\n作者：严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib.xesuser import*\n```\n\n\n\n### get_user_id(\"作品网址\")\n\n```python\n   user_id=get_user_id(\"作品网址\")\n   #本作品最重要的函数，这个获取作品网址的作者的user_id\n```\n\n### get__fans(user_id) \n\n```python\n   fans_info=get_fans(user_id) \n   #这个user_id从上面拿\n   #获取这个人粉丝的大部分信息，返回一个列表\n   #每项是一个字典：\n      fans_info[x][\"realname\"]#:获取第x项他的名字\n      fans_info[x][\"avatar_path\"]#:获取第x项他头像的url\n      fans_info[x][\"fans\"]#:获取第x项他的粉丝数量\n      fans_info[x][\"follows\"]#:获取第x项他的关注数量\n```\n\n### get_follows(user_id) \n\n```python\n   follows_info=get_follows(user_id) \n   #大体和get_fans一样\n   #获取这个人粉丝的大部分信息，返回一个列表\n   #每项是一个字典：\n      follows_info[x][\"realname\"]#:获取第x项他的名字\n      follows_info[x][\"avatar_path\"]#:获取第x项他头像的url\n      follows_info[x][\"fans\"]#:获取第x项他的粉丝数量\n      follows_info[x][\"follows\"]#:获取第x项他的关注数量\n```\n\n### get_info(user_id) \n\n```python\n   user_info=get_info(user_id) \n   #获取这个人的大部分信息，返回一个字典\n   user_info[\"name\"]#:返回这个人的名字\n   user_info[\"slogan\"]#:返回这个人的口号(名字下面那段)\n   user_info[\"fans\"]#:返回这个人的粉丝数量\n   user_info[\"follows\"]#:返回这个人的关注数量\n   user_info[\"icon\"]#:返回这个人的头像url\n```\n\n### user(user_id)\n\n```python\n   user=user(user_id)#这个其实大部分都是前面的内容，不过前面的加载比较慢，这个适用需要数据比较多的程序\n   user.works#：获取发布的作品总数\n   #user.work_info#：获取发布的作品的信息，返回一个列表，列表的每项都是字典\n   user.work_num#：获取一共有多少个作品（曾经发过的也算）\n\n   user.fans#：获取粉丝总数\n   #user.fans_info#：获取粉丝信息（和get_fans返回一样的信息）\n\n   user.follows#：获取关注总数\n   #user.follows_info#：获取关注信息（和get_follows返回一样的信息）\n   user.like_num#：获取点赞总数\n   user.view_num#：获取浏览总数\n   user.favorites#：获取收藏总数\n    \n```\n\n# xesapi\n\n## 导入方式\n\n```python\nfrom xingyunlib.xesapi import* \n```\n\n## get_api(url)\n\n返回url这个api上的数据\n\n示例->http://code.xueersi.com/api/index/works/modules\n\n```python\nprint(get_api(\"http://code.xueersi.com/api/index/works/modules\"))\n\"\"\"\n==输出==\n{'stat': 1, 'status': 1, 'msg': '操作成功', 'data': [{'title': '可多推荐', 'simple_title': '推荐', 'lines': 2, 'projects': [{'id': 11584188, 'name': '圆圈战争', 'category': 1, 'type': 'normal', 'user_id': 9686613, 'thumbnail': 'https://rescode.xesimg.com/hufu-code/common/mit/32f6766530dc287c1c8ab00c634e352b.png', 'published': 1, 'published_at': '2020-11-18 19:42:53', 'modified_at': '2020-11-18 19:42:53', 'likes': 4, 'views': 333, 'comments': 0, 'version': '3.0', 'source': 'xes_live', 'deleted_at': None, 'original_id': 2, 'created_at': '2020-11-17 20:46:43', 'updated_at': '2020-11-20 21:25:02', 'weight': 1, 'adapter': '', 'hidden_code': 2, 'source_code_views': 3, 'removed': 0, 'first_frame': 'https://rescode.xesimg.com/hufu-code/common/mit/32f6766530dc287c1c8ab00c634e352b.png', 'unlikes': 5, 'project_id': 11584188, 'works_id': 11584188, 'lang': 'scratch', 'popular_score': 12.13, 'username': '冯嘉睿', 'user_avatar': 'https://oot.xesimg.com/user/h/cc1e41a2dc511b8108a05b8f0dc8cf69.jpg', 'project_type': 'scratch', 'topic_id': 'CS_11584188'}, {'id': 11027485, 'name': '井字棋小游戏(双人)', 'category': 1, 'type': 'normal', 'user_id': 7818569, 'thumbnail': \n...(略)\n\"\"\"\n```\n\n## get_page(page,lang=\"\",tag=\"\",type=\"popular\")\n\npage：页码\n\nlang：语言\n\ntag：标签\n\ntype：爬取页面类型（默认为popular）\n\n```python\nprint(get_page(1,\"cpp\"))\n'''\n==输出==\n{'page': '1', 'per_page': '35', 'total': 7000, 'data': [{'id': 10443775, 'name': '教你如何黑电脑', 'category': 1, 'type': 'normal', 'user_id': 8730932, 'thumbnail': 'https://livefile.xesimg.com/programme/assets/b33adba6678f5e477f65d0f36d5581eb.jpg', 'la\n...(略)\n'''\n```\n\n## page_all_tags\n\n这个是一个常量(就是上面那个tag可以取得量)\n\n```python\nprint(page_all_tags)\n\"\"\"\n==输出==\n{'all_tags': ['游戏', '动画', '故事', '模拟', '艺术', '教程', '算法', '海龟', '沙盒专区', '其他'], 'tips': '1、为什么要给作品打分类标签？n为你的作品选择分类，更有利于其他小朋友精准的找到你的作品，这样，你的作品被别人看到的机率会更大哦。n一定要准确的选择分类，不要随便选择不或者不选呦！nn2、如何为自己的作品选择分类？n要想准确的选择分类，首先要先知道每个分类代表什么意思，一起来了解一下吧！n游戏：射击，冒险，跑酷，换装等等这些都算作游戏。n动画：用编程实现动画效果的作品。n故事：用编程表达一个奇妙的故事，比如写小说。n模拟：视频软件模拟器，音乐软件模拟器，浏览器模拟器，甚至做个模拟的系统。n艺术：美术，音乐等等类型的作品都可以。n教程：如果你是大牛，就快做作品教别人和你一样优秀吧！n算法：算法是解决一个问题的方法，C++用户请看这里。n海龟：海龟画图是python语言中专门用户画图的方法呦！n沙盒专区：MC？mini？为什么不自己创作一个类似的作品呢？n其他：如果没想好自己作品的分类，就选这个吧。'}\n\"\"\"\n```\n\n# pygame_extend（pygame扩展）\n\n导入方式：\n\n```python\nfrom xingyunlib.pygame_extend import *\n```\n\n(这样顺便导入pygame和sys欸嘿嘿)\n\n！没写完教程等需求多了在说把！\n\n# tkinter_extend（tkinter扩展）\n\n## 导入方式\n\n```python\nfrom xingyunlib.tkinter_extend import*\n```\n\n作者：严子昱\n\n##   inpu_box\n\n(class)\n\n```python\n#创建(就当button控件用)：\na=inpu_box(tk,函数名,**按钮的配置)\n\n#打包：\na.pack(**pack的配置)\n\n#配置：\na.config_entry(**文本框的配置)\na.config_button(**按钮的配置)\n#其实你基本可以当做Entry来用，除了初始化语句还有配置以外基本都是一样的\n#（剩下的教程还没写完）\n```\n\n## jitter()\n\n作用：抖动窗口（需要在窗口加载完毕后使用，否则可能会出现鬼畜）\n\n```python\nfrom tkinter import *\nroot = Tk()\na = Text(root)\na.pack(fill=BOTH)\n\njitter(root)\nroot.mainloop()\n```\n\n## center()\n\n作用：将窗口居中\n\n```python\nfrom tkinter import *\nroot = Tk()\na = Text(root)\na.pack(fill=BOTH)\n\njitter(root)\nroot.mainloop()\n```\n\n# dsfAdmin（自动安装第三方库）\n\n开发者|严子昱\n\n(暂时只支持windows)\n\n## 导入方式\n\n```python\nfrom xingyunlib.dsfAdmin import*\n```\n\n\n\n### get_pakages()\n\n作用：获取已安装每个包的版本\n\n```python\nfor x in range(len(get_pakages())):\n    print(\"库\"+x[0].center(19,\" \"),\"版本\"+x[1].center(10,\" \"))\n    \n```\n\n### find_pakages(pakages,ver=None)\n\n作用：获取时否安装pakage这个库，ver代表版本，默认不进行版本监测\n\n```python\nif find_pakages(\"xingyunlib\"):\n    print(\"你有安装xingyunlib库！\")\nelse:\n    print(\"你没有安装xingyunlib库！\")\n```\n\n### upgrade_pakages(pakage)\n\n作用：更新pakage这个库\n\n```python\nupgrade_pakages(“xingyunlib”)\n```\n\n### install_pakages(pakage)\n\n作用：安装这个库,常和find_pakages一起用\n\n```python\nif not find_pakages(\"alsolib\"):\n\tinstall_pakages(\"alsolib\")\n#注意这个，这个非常重要的,可以在没安装第三方库的时候自动下载库\n```\n\n### dump_pip_list(filename)\n\n作用：将库的list保存到这个文件里面\n\n### load_pip_list(filename)\n\n作用：将这个文件里面的库导出到正在使用的编译器\n\n```python\ndump_pip_list(\"pip_pakages\")\n#同目录会出现一个‘pip_pakages.pip’文件\n# |把这个文件移到另一台电脑\n# v\nload_pip_list(\"pip_pakages\")\n#然后这个程序就会自动安装在第一台电脑上所有的第三方库了\n```\n\n\n\n# image（pillow及wordcloud扩展）\n\n开发者|严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib.image import*\n```\n\n## resize(filename,XY)\n\n作用：将filename这个文件变成XY大的文件\n\n```python\nresive(\"img1.png\",(100,100))\n#将img1.png变成100x100的缩略图\n```\n\n## cloud(text,font_path,savafile=None,image=None,background_color=\"white\",color=True)\n（这个函数要安装numpy和wordcloud库）\n\n作用：text为列表，font_path为字体文件的位置\n\nsavafile为保存的文件名，image为模板图片的名字\n\nbackground_color为背景颜色 color为是否根据模板图片的颜色上色（在有模板的情况下）\n\n```python\nimport os\ntext=\"ahuidgayugwuydgatywefuwfdytafayuofdwtyfauyfatyfautfatyfatyufduyoawfgtydfeutoaftyaf\".split(\"a\")\ncloud(text,\"(你的字体文件)\",\"all.png\")\nos.startfile(\"all.png\")\n```\n\n## add_text(img, text, **args)\n\n这个**args包括以下内容\n\n```python\nfont=（”字体文件.ttf”，字号）\nXY=（x坐标，y坐标）#这个坐标以图片左上角为0，0（原点）\nfillColor=颜色（建议使用16进制颜色）\nshow_img=True#设置是否在修改完成后显示图片，默认为False\nchange_img=\"newimgname.png\"#设置输出的图片文件名\nadd_text(\"原图.png\",\"广告\",font=font,XY=XY,fillColor=fillColor,show_img=show_img,change_img=change_img)\n```\n\n# user（自定义用户类）\n\n开发者|严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib.user import *\n```\n\n初始化：\n\n## user_login(filename=None)\n\nfilename:之前的保存数据的文件名，如果没有保存过请不要写filename\n\n```python\nuser=user_login()\n#导入之前的数据\nuser=user_login(\"<数据文件名称>\")\n```\n\n注册：\n\n#### user.registered(name,key,flag=True,filename=None)\n\nname:注册的名字\n\nkey:密码\n\nflag设置为True:如果已经导入数据则返回False(如果已经注册过了就不让你注册)否则返回True(注册成功）\n\nflag设置为False：都可以注册\n\nfilename：保存数据文件的名称\n\n```python\ntype=user.registered(input(\"请输入你的名字：\"),input(\"请输入你的密码：\"),flag=True,filename=\"data\")\nif type==True:\n    print(\"注册成功！\")\nelse:\n    print(\"注册失败！\")\n```\n\n#### user.login(name,key)\n\nname:注册时的名称\n\nkey:密码\n\n返回一个bool值，为True或False\n\nTrue：验证密码正确 False：验证失败\n\n```python\ntype=user.login(input(\"请输入你的名字：\"),input(\"请输入你的密码：\"))\nif type==True:\n    print(\"注册成功！\")\nelse:\n    print(\"注册失败！\")\n```\n\n#### user.load(filename)\n\n导入保存的数据，filename为文件名\n\n```python\nb=user_login()\nb.load(\"你保存的文件名\")\n```\n\n# mail\n\n## 导入方式\n\n```python\nfrom xingyunlib import mail\n```\n\n用法：\n\n## mail.send(to,title,txt)\n\n```python\nmail.send(\"3161399620@qq.com\",\"hello python\",\"hello world!\")\n```\n\nto:发送给的邮箱\n\ntitle:标题\n\ntxt:发送的文本\n\n# err（自定义抛出错误）\n\n## 导入方式\n\n```python\nfrom xingyunlib import err\n```\n\n当你有一些程序想在特定的情况终止怎么办？\n\n试试下面的程序\n\n## err(txt)\n\n```python\nfrom xingyunlib import err\na=input(\"请输入1：\")\nif a!=\"1\":#如果非1\n    err.err(\"你没有输入1。。。\")\nelse:\n    ...\n    #程序自然退出\n```\n\n# http_spider（爬虫）\n\n## 导入方式\n\n```python\nfrom xingyunlib import http_spider\n```\n\n## load_requests(str,between,line)\n\n默认值：between=\":\" ; line=\"\\n\"\n\nbetween：分隔符\n\nline：换行符\n\n这个概念有点难理解，具体看下面示例，能不能听懂由天命\n\n```python\nfrom xingyunlib import http_spider\nheader=http_spider.load_requests(\"\"\"Accept: application/json, text/plain, */*\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9,en;q=0.8\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.116 Safari/537.36\"\"\",\": \",\"\\n\")#那段字符串是从浏览器复制出来的\nprint(header)\n\"\"\"\n----------\n输出：\n{'Accept': 'application/json, text/plain, */*', 'Accept-Encoding': 'gzip, deflate', 'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.116 Safari/537.36'}\n\"\"\"\n\n```\n\n主要作用是自动分析从浏览器复制出来的headers\n\n## spider(*args,**kwargs)\n\n这个函数就明显很水，完全是凑数用的，不过对于一些新手来说还是有点用的\n\n其实就是requests的变体，增加了一个判断是否状态码是否10x，40x，50x的功能而已\n\n```python\nfrom xingyunlib import http_spider\nprint(http_spider.spider(\"http://code.xueersi.com/api/compilers/6?id=6\").text)\n#略去输出结果\n```\n\n## ua_list\n\n话不多说，上代码\n\n```python\nfrom xingyunlib import http_spider\nprint(http_spider.ua_list)\n\"\"\"\n输出：\n['Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)', 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)', 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)', 'Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1)', 'Mozilla/5.0 (compatible; rv:1.9.1) Gecko/20090702 Firefox/3.5', 'Mozilla/5.0 (compatible; rv:1.9.2) Gecko/20100101 Firefox/3.6', 'Mozilla/5.0 (compatible; rv:2.0) Gecko/20110101 Firefox/4.0', 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0.2) Gecko/20100101 Firefox/6.0.2', 'Mozilla/5.0 (compatible) AppleWebKit/534.21 (KHTML, like Gecko) Chrome/11.0.682.0 Safari/534.21', 'Opera/9.80 (compatible; U) Presto/2.7.39 Version/11.00', 'Mozilla/5.0 (compatible; U) AppleWebKit/533.1 (KHTML, like Gecko) Maxthon/3.0.8.2 Safari/533.1', 'Mozilla/5.0 (Linux; U; Android 2.2) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1 ', 'Mozilla/5.0 (iPhone; U; CPU OS 4_2_1 like Mac OS X) AppleWebKit/532.9 (KHTML, like Gecko) Version/5.0.3 Mobile/8B5097d Safari/6531.22.7', 'Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/4.0.2 Mobile/8C148 Safari/6533.18.5', 'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_7) AppleWebKit/534.16+ (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4']\n\"\"\"\n```\n\n这是一个列表，里面有很多笔者搜集的ua，（截至2020-9-19）收录了15个ua，足够你用了\n\n## get_xes_url(url)\n\n爬取一个xes的页面\n\n```python\nfrom xingyunlib import http_spider\nprint(http_spider.get_xes_url(\"http://code.xueersi.com/api/compilers/6?id=6\"))\n#略去输出结果\n```\n\n# data（保存数据）\n\n数据类方法\n\n2020-10-1\n\n作者：严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib import data\n```\n\n## Data\n\n初始化方法：\n\n```python\ndta=data.Data(filename,find=False)\n\"\"\"\nfilename:文件名，若没有则创建\nfind:搜索模式，若没有filename则报错\n\"\"\"\n```\n\n输入数据：\n\n### change_data(data)\n\n```python\ndta=data.Data(filename,find=False)\n#略\n\"\"\"\ndata参数支持的数据:\nlist,bool,tutle,str,set,dict,int,float\n\"\"\"\ndta.change_data(\"加油！\")\n```\n\n### eval_data()\n\n把从文件中保存的数据转换成可执行内容\n\n```python\n\"\"\"fruit.txt内容：\n[\"apple\",\"orange\"]\n\"\"\"\ndta=data.Data(\"fruit.txt\",find=False)\ndta.eval_data()\nfor x in dta.data:\n    print(f\"fruit:{x}\")\n\"\"\"\n输出结果：\nfruit:apple\nfruit:orange\n\"\"\"\n\n\n```\n\n### save()\n\n保存结果到文件中\n\n```python\ndta=data.Data(\"great\",find=False)\ndta.change_data([\"hhc\",\"hhv\"])\ndta.save()\n\"\"\"great内容:\n[\"hhc\",\"hhv\"]\"\"\"\n```\n\n","source":"_posts/xingyunlib.md","raw":"---\ntitle: xingyunlib\ndate: 2021-02-06 10:06:56\ntags: Python\n---\n\n# xingyunlib\n[toc]\n\n开发者：严子昱|崔轩宇\n\nv1.2.20201004\n\n#v1.2.xx以后全是正式版#\n\n#hack-20201004:修复xesuser故障\n\n版权所有，侵权必究\n\n内置函数 导入方式：\n\n```python\nfrom xingyunlib import *\n```\n### 加密函数\n\n```python\nmd=md5(\"111\")#作用：用MD5加密\"111\"，返回一个字符串\ns1=sha1(\"111\")#作用：用sha1加密\"111\"，返回一个字符串\ns256=sha256(\"111\")#作用：用sha1加密\"111\"，返回一个字符串\n```\n\n### 颜色类\n\n```python\ncolor=colorX(颜色,传进去的颜色类型)#类型支持\"rgb\",\"hsv\",\"hex\"\n#示例：\ncolor=colorX((100,100,100),\"rgb\")\n```\n\n#### color.color\n\n返回颜色\n\n```python\nz=color.color\n```\n\n#### color_to(to_color,change=False)\n\n返回一个要转换的颜色\n\nto_color:转换的颜色，类型支持\"rgb\",\"hsv\",\"hex\"\n\nchange：是否更改原来的颜色\n\n```python\ncolor=colorX((255,255,255),\"rgb\")#实例化rgb\ncolor.color_to(\"hex\",True)#更改进制为16进制\nprint(color.color)#打印出color.color\n```\n\n\n\n# all（一次性导入扩展！可能出现覆盖现象！）\n\n## 使用方式\n\n```python\nfrom xingyunlib.all import*\n#或者\nimport xingyunlib.all as xingyunlib\n```\n\n# print_format（print格式化扩展）\n\n开发者：严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib.print_format import*\n```\n\n\n\n### print() \n\n```python\nprint(*str,t=0,sepr=\" \",end=\"\\n\") \n```\n\n\n我们来逐个讲解他们的用法 \n\n首先来看t参数： \nt=每个字停留的时间(默认为不停留) \n比如说，要每个字停留1秒，输出\"nice\"的代码如下： \n`print(\"nice\",t=1)` \n\n然后我们来看end参数 \n这个end参数其实和原来print的end参数是同样的作用 \n默认是\"\\n\"(换行符) \n\n最后我们看sepr参数，这个参数也是和原来print的sepr是同样的作用 \n我们来看一个例子： \n`print(\"ni\",\"e\",sepr=\"c\")` \n最后输出的就是“nice” \n\n我们来看大家这个很关心的变色简洁方式 \n我们在变色具体支持这些颜色： \n红、白、绿、蓝、黄、青、紫 \n用法如下（注意是两个斜杠）： \n'\\\\'+颜色（字的颜色变化） \n'\\\\l'+颜色（字的颜色变化,亮色）\n'\\\\b'+颜色（字的背景变化） \n'\\\\bl'+颜色（字的背景变化,亮色） \n'\\\\'(去除所有的变色效果) \n\n### clear_os()\n\n```python\nclear_os()\n```\n\n清除屏幕上的所有文字\n\n# xes更改（去除xeslib里面所有的print）\n\n最新版本的xingyunlib增加了xeslib的内容\n\n## 导入方式\n\n```python\nfrom xingyunlib.xes import xeslib里面的库名\n```\n\n更改：\n\n把xeslib里面所有的print都去了\n\n修改AIspeak.speak函数\n\n```python\nfrom xingyunlib.xes import AIspeak\nxes.AIspeak.speak(\"hello python!\",\"file.mp3\")\n\"\"\"\n本程序作用：\n将hello python！\n保存到file.mp3音频文件里面，并且不播放\n\"\"\"\nxes.AIspeak.speak(\"hello python!\")\n\"\"\"\n本程序作用：\n播放hello python！这段音频\n\"\"\"\n```\n\n# xesapp（获取学而思站上某个作品的数据！已修复！）\n\n开发者：严子昱|崔轩语\n\n## 导入方式\n\n```python\nfrom xingyunlib.xesapp import*\n```\n\n\n\n### xesapp(url)\n\n```python\n<xesapp>=xesapp(url)\n```\n\n构建一个运行对象\nurl为学而思里面的py作品网址\n\n接下来讲这个类的方法：\n\n\n##### get_hot()<u></u>\n\n返回作品的热度\n\n```python\nprint(xesapp.get_hot())\n```\n\n##### get_cover()\n\n返回作品封面的url\n\n```python\nprint(xesapp.get_cover())\n```\n\n##### load_cover(filename)\n\n下载作品封面到filename\n\n```python\nxesapp.load_cover(\"\")\n```\n\n##### get_view()\n\n返回作品的观看人数\n\n```python\nprint(xesapp.get_view())\n```\n\n##### get_hot()\n\n返回作品的热度\n\n```python\nprint(xesapp.get_hot())\n```\n\n##### get_like()\n\n返回作品的点赞数\n\n```python\nprint(xesapp.get_like())\n```\n\n##### get_unlike()\n\n返回作品的点踩数\n\n```python\nprint(xesapp.get_unlike())\n```\n\n##### load_file(cache = \"\")\n\n默认下载作品源文件到工作目录\n如果cache不为空择下载到这个文件夹\n\n```python\nxesapp.load_file()\n```\n\n##### is_like()\n\n判断在程序运行这个作品有没有人点赞\n返回一个bool值\nTrue：点赞了\nFalse：点踩了\nNone：没有点赞也没有点踩\n\n```python\nif xesapp.is_like == True:\n    print(\"点赞了\")\nelif xesapp.is_like == False:\n    print(\"点踩了\")\nelse:\n    print(\"什么都没点\")\n```\n\n##### run_app()\n\n运行这个作品\n\n```python\nexec(xesapp.run_app())\n```\n\n\n##### get_published()\n\n获取作品第一次保存时间\n\n```python\nprint(xesapp.get_published())\n```\n\n##### get_modified()\n\n获取作品最后一次更新时间\n\n```python\nprint(xesapp.get_modified())\n```\n\n##### is_hidden_code()\n\n获取作品是否隐藏代码\n\n```python\nif xesapp.is_hidden_code():\n    print(\"作品的代码隐藏了\")\nelse:\n    print(\"作品的代码没有隐藏\")\n```\n\n##### get_description()\n\n获取作品的说明\n\n```python\nprint(xesapp.get_description())\n```\n\n##### get_comments()\n\n获取作品一共有多少人评论\n\n```python\nprint(xesapp.get_comments())\n```\n\n##### is_comments()\n\n获取从这个作品初始化到现在是否有人评论\n\n```python\nif xesapp.is_comments():\n    print(\"评论了\")\nelse:\n    print(\"没有评论\")\n```\n## cmt(url)\n\n这个是一个获取评论的api\n\n### dta_dic\n\n```python\n#获取一个包含所有评论的列表\na=cmt(\"http://code.xueersi.com/home/project/detail?lang=code&pid=9785566&version=offline&form=python&langType=python\")\nprint(a.dta_dic)\n#输出\n\"\"\"\n（略）\n\"\"\"\n```\n\n### fmt（）\n\n```python\n#返回一个字符串（评论的字符格式化）\na=cmt(\"http://code.xueersi.com/home/project/detail?lang=code&pid=9785566&version=offline&form=python&langType=python\")\nprint(a.fmt())\n#部分输出\n\"\"\"\n[2020-10-17 20:52:11]\n\t一维回复严子昱:快点=-=不取关就pen你\n\n[2020-10-17 20:51:31]\n\t一维回复严子昱:有时关注我这个人，并不是太好的选择\n\t取关我吧，有事请加qq：3456198711\n\t微信：huiyu431249891\n\n[2020-10-17 18:34:35]\n\t俊翔回复严子昱:作者是喜欢互关吗？居然关注我这样的蚂蚁，太感动了\n\n[2020-10-15 21:56:11]\n\t陈奕翰回复严子昱:考虑合作嘛\n\t\n\n[2020-10-10 19:29:26]\n\t茜幻回复严子昱:作者在吗\n\n[2020-10-10 19:10:42]\n\t蒋狄璁回复严子昱:互关\n\n.......(略)\n\"\"\"\n\n```\n\n### sorted（by=“likes”,reverse=True）\n\n```python\n#设置排序\na=cmt(\"http://code.xueersi.com/home/project/detail?lang=code&pid=9785566&version=offline&form=python&langType=python\")\na.sorted(by=\"likes\",reverse=True)#reverse为 从高到低排列\nprint(a.fmt())\n\n\"\"\"\n[2020-10-15 21:56:11]\n\t陈奕翰回复严子昱:考虑合作嘛\n\t\n\n[2020-10-17 20:52:11]\n\t一维回复严子昱:快点=-=不取关就pen你\n\n[2020-10-17 18:34:35]\n\t俊翔回复严子昱:作者是喜欢互关吗？居然关注我这样的蚂蚁，太感动了\n\n[2020-10-01 20:51:57]\n\t王玎珰回复严子昱:啊这\n...（略）\n\"\"\"\n\n\n```\n\n\n\n# **xesuser（获取学而思站上某个用户的数据！已修复！）**\n\n<u>***注意！！***</u>\n\n<u>***千万一定不要超高频率请求，否则会报错！！！***</u>\n\n作者：严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib.xesuser import*\n```\n\n\n\n### get_user_id(\"作品网址\")\n\n```python\n   user_id=get_user_id(\"作品网址\")\n   #本作品最重要的函数，这个获取作品网址的作者的user_id\n```\n\n### get__fans(user_id) \n\n```python\n   fans_info=get_fans(user_id) \n   #这个user_id从上面拿\n   #获取这个人粉丝的大部分信息，返回一个列表\n   #每项是一个字典：\n      fans_info[x][\"realname\"]#:获取第x项他的名字\n      fans_info[x][\"avatar_path\"]#:获取第x项他头像的url\n      fans_info[x][\"fans\"]#:获取第x项他的粉丝数量\n      fans_info[x][\"follows\"]#:获取第x项他的关注数量\n```\n\n### get_follows(user_id) \n\n```python\n   follows_info=get_follows(user_id) \n   #大体和get_fans一样\n   #获取这个人粉丝的大部分信息，返回一个列表\n   #每项是一个字典：\n      follows_info[x][\"realname\"]#:获取第x项他的名字\n      follows_info[x][\"avatar_path\"]#:获取第x项他头像的url\n      follows_info[x][\"fans\"]#:获取第x项他的粉丝数量\n      follows_info[x][\"follows\"]#:获取第x项他的关注数量\n```\n\n### get_info(user_id) \n\n```python\n   user_info=get_info(user_id) \n   #获取这个人的大部分信息，返回一个字典\n   user_info[\"name\"]#:返回这个人的名字\n   user_info[\"slogan\"]#:返回这个人的口号(名字下面那段)\n   user_info[\"fans\"]#:返回这个人的粉丝数量\n   user_info[\"follows\"]#:返回这个人的关注数量\n   user_info[\"icon\"]#:返回这个人的头像url\n```\n\n### user(user_id)\n\n```python\n   user=user(user_id)#这个其实大部分都是前面的内容，不过前面的加载比较慢，这个适用需要数据比较多的程序\n   user.works#：获取发布的作品总数\n   #user.work_info#：获取发布的作品的信息，返回一个列表，列表的每项都是字典\n   user.work_num#：获取一共有多少个作品（曾经发过的也算）\n\n   user.fans#：获取粉丝总数\n   #user.fans_info#：获取粉丝信息（和get_fans返回一样的信息）\n\n   user.follows#：获取关注总数\n   #user.follows_info#：获取关注信息（和get_follows返回一样的信息）\n   user.like_num#：获取点赞总数\n   user.view_num#：获取浏览总数\n   user.favorites#：获取收藏总数\n    \n```\n\n# xesapi\n\n## 导入方式\n\n```python\nfrom xingyunlib.xesapi import* \n```\n\n## get_api(url)\n\n返回url这个api上的数据\n\n示例->http://code.xueersi.com/api/index/works/modules\n\n```python\nprint(get_api(\"http://code.xueersi.com/api/index/works/modules\"))\n\"\"\"\n==输出==\n{'stat': 1, 'status': 1, 'msg': '操作成功', 'data': [{'title': '可多推荐', 'simple_title': '推荐', 'lines': 2, 'projects': [{'id': 11584188, 'name': '圆圈战争', 'category': 1, 'type': 'normal', 'user_id': 9686613, 'thumbnail': 'https://rescode.xesimg.com/hufu-code/common/mit/32f6766530dc287c1c8ab00c634e352b.png', 'published': 1, 'published_at': '2020-11-18 19:42:53', 'modified_at': '2020-11-18 19:42:53', 'likes': 4, 'views': 333, 'comments': 0, 'version': '3.0', 'source': 'xes_live', 'deleted_at': None, 'original_id': 2, 'created_at': '2020-11-17 20:46:43', 'updated_at': '2020-11-20 21:25:02', 'weight': 1, 'adapter': '', 'hidden_code': 2, 'source_code_views': 3, 'removed': 0, 'first_frame': 'https://rescode.xesimg.com/hufu-code/common/mit/32f6766530dc287c1c8ab00c634e352b.png', 'unlikes': 5, 'project_id': 11584188, 'works_id': 11584188, 'lang': 'scratch', 'popular_score': 12.13, 'username': '冯嘉睿', 'user_avatar': 'https://oot.xesimg.com/user/h/cc1e41a2dc511b8108a05b8f0dc8cf69.jpg', 'project_type': 'scratch', 'topic_id': 'CS_11584188'}, {'id': 11027485, 'name': '井字棋小游戏(双人)', 'category': 1, 'type': 'normal', 'user_id': 7818569, 'thumbnail': \n...(略)\n\"\"\"\n```\n\n## get_page(page,lang=\"\",tag=\"\",type=\"popular\")\n\npage：页码\n\nlang：语言\n\ntag：标签\n\ntype：爬取页面类型（默认为popular）\n\n```python\nprint(get_page(1,\"cpp\"))\n'''\n==输出==\n{'page': '1', 'per_page': '35', 'total': 7000, 'data': [{'id': 10443775, 'name': '教你如何黑电脑', 'category': 1, 'type': 'normal', 'user_id': 8730932, 'thumbnail': 'https://livefile.xesimg.com/programme/assets/b33adba6678f5e477f65d0f36d5581eb.jpg', 'la\n...(略)\n'''\n```\n\n## page_all_tags\n\n这个是一个常量(就是上面那个tag可以取得量)\n\n```python\nprint(page_all_tags)\n\"\"\"\n==输出==\n{'all_tags': ['游戏', '动画', '故事', '模拟', '艺术', '教程', '算法', '海龟', '沙盒专区', '其他'], 'tips': '1、为什么要给作品打分类标签？n为你的作品选择分类，更有利于其他小朋友精准的找到你的作品，这样，你的作品被别人看到的机率会更大哦。n一定要准确的选择分类，不要随便选择不或者不选呦！nn2、如何为自己的作品选择分类？n要想准确的选择分类，首先要先知道每个分类代表什么意思，一起来了解一下吧！n游戏：射击，冒险，跑酷，换装等等这些都算作游戏。n动画：用编程实现动画效果的作品。n故事：用编程表达一个奇妙的故事，比如写小说。n模拟：视频软件模拟器，音乐软件模拟器，浏览器模拟器，甚至做个模拟的系统。n艺术：美术，音乐等等类型的作品都可以。n教程：如果你是大牛，就快做作品教别人和你一样优秀吧！n算法：算法是解决一个问题的方法，C++用户请看这里。n海龟：海龟画图是python语言中专门用户画图的方法呦！n沙盒专区：MC？mini？为什么不自己创作一个类似的作品呢？n其他：如果没想好自己作品的分类，就选这个吧。'}\n\"\"\"\n```\n\n# pygame_extend（pygame扩展）\n\n导入方式：\n\n```python\nfrom xingyunlib.pygame_extend import *\n```\n\n(这样顺便导入pygame和sys欸嘿嘿)\n\n！没写完教程等需求多了在说把！\n\n# tkinter_extend（tkinter扩展）\n\n## 导入方式\n\n```python\nfrom xingyunlib.tkinter_extend import*\n```\n\n作者：严子昱\n\n##   inpu_box\n\n(class)\n\n```python\n#创建(就当button控件用)：\na=inpu_box(tk,函数名,**按钮的配置)\n\n#打包：\na.pack(**pack的配置)\n\n#配置：\na.config_entry(**文本框的配置)\na.config_button(**按钮的配置)\n#其实你基本可以当做Entry来用，除了初始化语句还有配置以外基本都是一样的\n#（剩下的教程还没写完）\n```\n\n## jitter()\n\n作用：抖动窗口（需要在窗口加载完毕后使用，否则可能会出现鬼畜）\n\n```python\nfrom tkinter import *\nroot = Tk()\na = Text(root)\na.pack(fill=BOTH)\n\njitter(root)\nroot.mainloop()\n```\n\n## center()\n\n作用：将窗口居中\n\n```python\nfrom tkinter import *\nroot = Tk()\na = Text(root)\na.pack(fill=BOTH)\n\njitter(root)\nroot.mainloop()\n```\n\n# dsfAdmin（自动安装第三方库）\n\n开发者|严子昱\n\n(暂时只支持windows)\n\n## 导入方式\n\n```python\nfrom xingyunlib.dsfAdmin import*\n```\n\n\n\n### get_pakages()\n\n作用：获取已安装每个包的版本\n\n```python\nfor x in range(len(get_pakages())):\n    print(\"库\"+x[0].center(19,\" \"),\"版本\"+x[1].center(10,\" \"))\n    \n```\n\n### find_pakages(pakages,ver=None)\n\n作用：获取时否安装pakage这个库，ver代表版本，默认不进行版本监测\n\n```python\nif find_pakages(\"xingyunlib\"):\n    print(\"你有安装xingyunlib库！\")\nelse:\n    print(\"你没有安装xingyunlib库！\")\n```\n\n### upgrade_pakages(pakage)\n\n作用：更新pakage这个库\n\n```python\nupgrade_pakages(“xingyunlib”)\n```\n\n### install_pakages(pakage)\n\n作用：安装这个库,常和find_pakages一起用\n\n```python\nif not find_pakages(\"alsolib\"):\n\tinstall_pakages(\"alsolib\")\n#注意这个，这个非常重要的,可以在没安装第三方库的时候自动下载库\n```\n\n### dump_pip_list(filename)\n\n作用：将库的list保存到这个文件里面\n\n### load_pip_list(filename)\n\n作用：将这个文件里面的库导出到正在使用的编译器\n\n```python\ndump_pip_list(\"pip_pakages\")\n#同目录会出现一个‘pip_pakages.pip’文件\n# |把这个文件移到另一台电脑\n# v\nload_pip_list(\"pip_pakages\")\n#然后这个程序就会自动安装在第一台电脑上所有的第三方库了\n```\n\n\n\n# image（pillow及wordcloud扩展）\n\n开发者|严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib.image import*\n```\n\n## resize(filename,XY)\n\n作用：将filename这个文件变成XY大的文件\n\n```python\nresive(\"img1.png\",(100,100))\n#将img1.png变成100x100的缩略图\n```\n\n## cloud(text,font_path,savafile=None,image=None,background_color=\"white\",color=True)\n（这个函数要安装numpy和wordcloud库）\n\n作用：text为列表，font_path为字体文件的位置\n\nsavafile为保存的文件名，image为模板图片的名字\n\nbackground_color为背景颜色 color为是否根据模板图片的颜色上色（在有模板的情况下）\n\n```python\nimport os\ntext=\"ahuidgayugwuydgatywefuwfdytafayuofdwtyfauyfatyfautfatyfatyufduyoawfgtydfeutoaftyaf\".split(\"a\")\ncloud(text,\"(你的字体文件)\",\"all.png\")\nos.startfile(\"all.png\")\n```\n\n## add_text(img, text, **args)\n\n这个**args包括以下内容\n\n```python\nfont=（”字体文件.ttf”，字号）\nXY=（x坐标，y坐标）#这个坐标以图片左上角为0，0（原点）\nfillColor=颜色（建议使用16进制颜色）\nshow_img=True#设置是否在修改完成后显示图片，默认为False\nchange_img=\"newimgname.png\"#设置输出的图片文件名\nadd_text(\"原图.png\",\"广告\",font=font,XY=XY,fillColor=fillColor,show_img=show_img,change_img=change_img)\n```\n\n# user（自定义用户类）\n\n开发者|严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib.user import *\n```\n\n初始化：\n\n## user_login(filename=None)\n\nfilename:之前的保存数据的文件名，如果没有保存过请不要写filename\n\n```python\nuser=user_login()\n#导入之前的数据\nuser=user_login(\"<数据文件名称>\")\n```\n\n注册：\n\n#### user.registered(name,key,flag=True,filename=None)\n\nname:注册的名字\n\nkey:密码\n\nflag设置为True:如果已经导入数据则返回False(如果已经注册过了就不让你注册)否则返回True(注册成功）\n\nflag设置为False：都可以注册\n\nfilename：保存数据文件的名称\n\n```python\ntype=user.registered(input(\"请输入你的名字：\"),input(\"请输入你的密码：\"),flag=True,filename=\"data\")\nif type==True:\n    print(\"注册成功！\")\nelse:\n    print(\"注册失败！\")\n```\n\n#### user.login(name,key)\n\nname:注册时的名称\n\nkey:密码\n\n返回一个bool值，为True或False\n\nTrue：验证密码正确 False：验证失败\n\n```python\ntype=user.login(input(\"请输入你的名字：\"),input(\"请输入你的密码：\"))\nif type==True:\n    print(\"注册成功！\")\nelse:\n    print(\"注册失败！\")\n```\n\n#### user.load(filename)\n\n导入保存的数据，filename为文件名\n\n```python\nb=user_login()\nb.load(\"你保存的文件名\")\n```\n\n# mail\n\n## 导入方式\n\n```python\nfrom xingyunlib import mail\n```\n\n用法：\n\n## mail.send(to,title,txt)\n\n```python\nmail.send(\"3161399620@qq.com\",\"hello python\",\"hello world!\")\n```\n\nto:发送给的邮箱\n\ntitle:标题\n\ntxt:发送的文本\n\n# err（自定义抛出错误）\n\n## 导入方式\n\n```python\nfrom xingyunlib import err\n```\n\n当你有一些程序想在特定的情况终止怎么办？\n\n试试下面的程序\n\n## err(txt)\n\n```python\nfrom xingyunlib import err\na=input(\"请输入1：\")\nif a!=\"1\":#如果非1\n    err.err(\"你没有输入1。。。\")\nelse:\n    ...\n    #程序自然退出\n```\n\n# http_spider（爬虫）\n\n## 导入方式\n\n```python\nfrom xingyunlib import http_spider\n```\n\n## load_requests(str,between,line)\n\n默认值：between=\":\" ; line=\"\\n\"\n\nbetween：分隔符\n\nline：换行符\n\n这个概念有点难理解，具体看下面示例，能不能听懂由天命\n\n```python\nfrom xingyunlib import http_spider\nheader=http_spider.load_requests(\"\"\"Accept: application/json, text/plain, */*\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9,en;q=0.8\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.116 Safari/537.36\"\"\",\": \",\"\\n\")#那段字符串是从浏览器复制出来的\nprint(header)\n\"\"\"\n----------\n输出：\n{'Accept': 'application/json, text/plain, */*', 'Accept-Encoding': 'gzip, deflate', 'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.116 Safari/537.36'}\n\"\"\"\n\n```\n\n主要作用是自动分析从浏览器复制出来的headers\n\n## spider(*args,**kwargs)\n\n这个函数就明显很水，完全是凑数用的，不过对于一些新手来说还是有点用的\n\n其实就是requests的变体，增加了一个判断是否状态码是否10x，40x，50x的功能而已\n\n```python\nfrom xingyunlib import http_spider\nprint(http_spider.spider(\"http://code.xueersi.com/api/compilers/6?id=6\").text)\n#略去输出结果\n```\n\n## ua_list\n\n话不多说，上代码\n\n```python\nfrom xingyunlib import http_spider\nprint(http_spider.ua_list)\n\"\"\"\n输出：\n['Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)', 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)', 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)', 'Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1)', 'Mozilla/5.0 (compatible; rv:1.9.1) Gecko/20090702 Firefox/3.5', 'Mozilla/5.0 (compatible; rv:1.9.2) Gecko/20100101 Firefox/3.6', 'Mozilla/5.0 (compatible; rv:2.0) Gecko/20110101 Firefox/4.0', 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0.2) Gecko/20100101 Firefox/6.0.2', 'Mozilla/5.0 (compatible) AppleWebKit/534.21 (KHTML, like Gecko) Chrome/11.0.682.0 Safari/534.21', 'Opera/9.80 (compatible; U) Presto/2.7.39 Version/11.00', 'Mozilla/5.0 (compatible; U) AppleWebKit/533.1 (KHTML, like Gecko) Maxthon/3.0.8.2 Safari/533.1', 'Mozilla/5.0 (Linux; U; Android 2.2) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1 ', 'Mozilla/5.0 (iPhone; U; CPU OS 4_2_1 like Mac OS X) AppleWebKit/532.9 (KHTML, like Gecko) Version/5.0.3 Mobile/8B5097d Safari/6531.22.7', 'Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/4.0.2 Mobile/8C148 Safari/6533.18.5', 'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_7) AppleWebKit/534.16+ (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4']\n\"\"\"\n```\n\n这是一个列表，里面有很多笔者搜集的ua，（截至2020-9-19）收录了15个ua，足够你用了\n\n## get_xes_url(url)\n\n爬取一个xes的页面\n\n```python\nfrom xingyunlib import http_spider\nprint(http_spider.get_xes_url(\"http://code.xueersi.com/api/compilers/6?id=6\"))\n#略去输出结果\n```\n\n# data（保存数据）\n\n数据类方法\n\n2020-10-1\n\n作者：严子昱\n\n## 导入方式\n\n```python\nfrom xingyunlib import data\n```\n\n## Data\n\n初始化方法：\n\n```python\ndta=data.Data(filename,find=False)\n\"\"\"\nfilename:文件名，若没有则创建\nfind:搜索模式，若没有filename则报错\n\"\"\"\n```\n\n输入数据：\n\n### change_data(data)\n\n```python\ndta=data.Data(filename,find=False)\n#略\n\"\"\"\ndata参数支持的数据:\nlist,bool,tutle,str,set,dict,int,float\n\"\"\"\ndta.change_data(\"加油！\")\n```\n\n### eval_data()\n\n把从文件中保存的数据转换成可执行内容\n\n```python\n\"\"\"fruit.txt内容：\n[\"apple\",\"orange\"]\n\"\"\"\ndta=data.Data(\"fruit.txt\",find=False)\ndta.eval_data()\nfor x in dta.data:\n    print(f\"fruit:{x}\")\n\"\"\"\n输出结果：\nfruit:apple\nfruit:orange\n\"\"\"\n\n\n```\n\n### save()\n\n保存结果到文件中\n\n```python\ndta=data.Data(\"great\",find=False)\ndta.change_data([\"hhc\",\"hhv\"])\ndta.save()\n\"\"\"great内容:\n[\"hhc\",\"hhv\"]\"\"\"\n```\n\n","slug":"xingyunlib","published":1,"updated":"2021-02-11T09:28:48.248Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckl0o2acg0006io8da1p04m9h","content":"<h1 id=\"xingyunlib\"><a href=\"#xingyunlib\" class=\"headerlink\" title=\"xingyunlib\"></a>xingyunlib</h1><p>[toc]</p>\n<p>开发者：严子昱|崔轩宇</p>\n<p>v1.2.20201004</p>\n<p>#v1.2.xx以后全是正式版#</p>\n<p>#hack-20201004:修复xesuser故障</p>\n<p>版权所有，侵权必究</p>\n<p>内置函数 导入方式：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> *</span><br></pre></td></tr></table></figure>\n<h3 id=\"加密函数\"><a href=\"#加密函数\" class=\"headerlink\" title=\"加密函数\"></a>加密函数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md=md5(<span class=\"string\">&quot;111&quot;</span>)<span class=\"comment\">#作用：用MD5加密&quot;111&quot;，返回一个字符串</span></span><br><span class=\"line\">s1=sha1(<span class=\"string\">&quot;111&quot;</span>)<span class=\"comment\">#作用：用sha1加密&quot;111&quot;，返回一个字符串</span></span><br><span class=\"line\">s256=sha256(<span class=\"string\">&quot;111&quot;</span>)<span class=\"comment\">#作用：用sha1加密&quot;111&quot;，返回一个字符串</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"颜色类\"><a href=\"#颜色类\" class=\"headerlink\" title=\"颜色类\"></a>颜色类</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">color=colorX(颜色,传进去的颜色类型)<span class=\"comment\">#类型支持&quot;rgb&quot;,&quot;hsv&quot;,&quot;hex&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#示例：</span></span><br><span class=\"line\">color=colorX((<span class=\"number\">100</span>,<span class=\"number\">100</span>,<span class=\"number\">100</span>),<span class=\"string\">&quot;rgb&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"color-color\"><a href=\"#color-color\" class=\"headerlink\" title=\"color.color\"></a>color.color</h4><p>返回颜色</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">z=color.color</span><br></pre></td></tr></table></figure>\n<h4 id=\"color-to-to-color-change-False\"><a href=\"#color-to-to-color-change-False\" class=\"headerlink\" title=\"color_to(to_color,change=False)\"></a>color_to(to_color,change=False)</h4><p>返回一个要转换的颜色</p>\n<p>to_color:转换的颜色，类型支持”rgb”,”hsv”,”hex”</p>\n<p>change：是否更改原来的颜色</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">color=colorX((<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>),<span class=\"string\">&quot;rgb&quot;</span>)<span class=\"comment\">#实例化rgb</span></span><br><span class=\"line\">color.color_to(<span class=\"string\">&quot;hex&quot;</span>,<span class=\"literal\">True</span>)<span class=\"comment\">#更改进制为16进制</span></span><br><span class=\"line\">print(color.color)<span class=\"comment\">#打印出color.color</span></span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"all（一次性导入扩展！可能出现覆盖现象！）\"><a href=\"#all（一次性导入扩展！可能出现覆盖现象！）\" class=\"headerlink\" title=\"all（一次性导入扩展！可能出现覆盖现象！）\"></a>all（一次性导入扩展！可能出现覆盖现象！）</h1><h2 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.<span class=\"built_in\">all</span> <span class=\"keyword\">import</span>*</span><br><span class=\"line\"><span class=\"comment\">#或者</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> xingyunlib.<span class=\"built_in\">all</span> <span class=\"keyword\">as</span> xingyunlib</span><br></pre></td></tr></table></figure>\n<h1 id=\"print-format（print格式化扩展）\"><a href=\"#print-format（print格式化扩展）\" class=\"headerlink\" title=\"print_format（print格式化扩展）\"></a>print_format（print格式化扩展）</h1><p>开发者：严子昱</p>\n<h2 id=\"导入方式\"><a href=\"#导入方式\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.print_format <span class=\"keyword\">import</span>*</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"print\"><a href=\"#print\" class=\"headerlink\" title=\"print()\"></a>print()</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(*<span class=\"built_in\">str</span>,t=<span class=\"number\">0</span>,sepr=<span class=\"string\">&quot; &quot;</span>,end=<span class=\"string\">&quot;\\n&quot;</span>) </span><br></pre></td></tr></table></figure>\n\n<p>我们来逐个讲解他们的用法 </p>\n<p>首先来看t参数：<br>t=每个字停留的时间(默认为不停留)<br>比如说，要每个字停留1秒，输出”nice”的代码如下：<br><code>print(&quot;nice&quot;,t=1)</code> </p>\n<p>然后我们来看end参数<br>这个end参数其实和原来print的end参数是同样的作用<br>默认是”\\n”(换行符) </p>\n<p>最后我们看sepr参数，这个参数也是和原来print的sepr是同样的作用<br>我们来看一个例子：<br><code>print(&quot;ni&quot;,&quot;e&quot;,sepr=&quot;c&quot;)</code><br>最后输出的就是“nice” </p>\n<p>我们来看大家这个很关心的变色简洁方式<br>我们在变色具体支持这些颜色：<br>红、白、绿、蓝、黄、青、紫<br>用法如下（注意是两个斜杠）：<br>‘\\‘+颜色（字的颜色变化）<br>‘\\l’+颜色（字的颜色变化,亮色）<br>‘\\b’+颜色（字的背景变化）<br>‘\\bl’+颜色（字的背景变化,亮色）<br>‘\\‘(去除所有的变色效果) </p>\n<h3 id=\"clear-os\"><a href=\"#clear-os\" class=\"headerlink\" title=\"clear_os()\"></a>clear_os()</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clear_os()</span><br></pre></td></tr></table></figure>\n<p>清除屏幕上的所有文字</p>\n<h1 id=\"xes更改（去除xeslib里面所有的print）\"><a href=\"#xes更改（去除xeslib里面所有的print）\" class=\"headerlink\" title=\"xes更改（去除xeslib里面所有的print）\"></a>xes更改（去除xeslib里面所有的print）</h1><p>最新版本的xingyunlib增加了xeslib的内容</p>\n<h2 id=\"导入方式-1\"><a href=\"#导入方式-1\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.xes <span class=\"keyword\">import</span> xeslib里面的库名</span><br></pre></td></tr></table></figure>\n<p>更改：</p>\n<p>把xeslib里面所有的print都去了</p>\n<p>修改AIspeak.speak函数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.xes <span class=\"keyword\">import</span> AIspeak</span><br><span class=\"line\">xes.AIspeak.speak(<span class=\"string\">&quot;hello python!&quot;</span>,<span class=\"string\">&quot;file.mp3&quot;</span>)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">本程序作用：</span></span><br><span class=\"line\"><span class=\"string\">将hello python！</span></span><br><span class=\"line\"><span class=\"string\">保存到file.mp3音频文件里面，并且不播放</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">xes.AIspeak.speak(<span class=\"string\">&quot;hello python!&quot;</span>)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">本程序作用：</span></span><br><span class=\"line\"><span class=\"string\">播放hello python！这段音频</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"xesapp（获取学而思站上某个作品的数据！已修复！）\"><a href=\"#xesapp（获取学而思站上某个作品的数据！已修复！）\" class=\"headerlink\" title=\"xesapp（获取学而思站上某个作品的数据！已修复！）\"></a>xesapp（获取学而思站上某个作品的数据！已修复！）</h1><p>开发者：严子昱|崔轩语</p>\n<h2 id=\"导入方式-2\"><a href=\"#导入方式-2\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.xesapp <span class=\"keyword\">import</span>*</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"xesapp-url\"><a href=\"#xesapp-url\" class=\"headerlink\" title=\"xesapp(url)\"></a>xesapp(url)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;xesapp&gt;=xesapp(url)</span><br></pre></td></tr></table></figure>\n<p>构建一个运行对象<br>url为学而思里面的py作品网址</p>\n<p>接下来讲这个类的方法：</p>\n<h5 id=\"get-hot\"><a href=\"#get-hot\" class=\"headerlink\" title=\"get_hot()\"></a>get_hot()<u></u></h5><p>返回作品的热度</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_hot())</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-cover\"><a href=\"#get-cover\" class=\"headerlink\" title=\"get_cover()\"></a>get_cover()</h5><p>返回作品封面的url</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_cover())</span><br></pre></td></tr></table></figure>\n<h5 id=\"load-cover-filename\"><a href=\"#load-cover-filename\" class=\"headerlink\" title=\"load_cover(filename)\"></a>load_cover(filename)</h5><p>下载作品封面到filename</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xesapp.load_cover(<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-view\"><a href=\"#get-view\" class=\"headerlink\" title=\"get_view()\"></a>get_view()</h5><p>返回作品的观看人数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_view())</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-hot-1\"><a href=\"#get-hot-1\" class=\"headerlink\" title=\"get_hot()\"></a>get_hot()</h5><p>返回作品的热度</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_hot())</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-like\"><a href=\"#get-like\" class=\"headerlink\" title=\"get_like()\"></a>get_like()</h5><p>返回作品的点赞数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_like())</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-unlike\"><a href=\"#get-unlike\" class=\"headerlink\" title=\"get_unlike()\"></a>get_unlike()</h5><p>返回作品的点踩数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_unlike())</span><br></pre></td></tr></table></figure>\n<h5 id=\"load-file-cache-“”\"><a href=\"#load-file-cache-“”\" class=\"headerlink\" title=\"load_file(cache = “”)\"></a>load_file(cache = “”)</h5><p>默认下载作品源文件到工作目录<br>如果cache不为空择下载到这个文件夹</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xesapp.load_file()</span><br></pre></td></tr></table></figure>\n<h5 id=\"is-like\"><a href=\"#is-like\" class=\"headerlink\" title=\"is_like()\"></a>is_like()</h5><p>判断在程序运行这个作品有没有人点赞<br>返回一个bool值<br>True：点赞了<br>False：点踩了<br>None：没有点赞也没有点踩</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> xesapp.is_like == <span class=\"literal\">True</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;点赞了&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> xesapp.is_like == <span class=\"literal\">False</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;点踩了&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;什么都没点&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"run-app\"><a href=\"#run-app\" class=\"headerlink\" title=\"run_app()\"></a>run_app()</h5><p>运行这个作品</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exec(xesapp.run_app())</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"get-published\"><a href=\"#get-published\" class=\"headerlink\" title=\"get_published()\"></a>get_published()</h5><p>获取作品第一次保存时间</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_published())</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-modified\"><a href=\"#get-modified\" class=\"headerlink\" title=\"get_modified()\"></a>get_modified()</h5><p>获取作品最后一次更新时间</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_modified())</span><br></pre></td></tr></table></figure>\n<h5 id=\"is-hidden-code\"><a href=\"#is-hidden-code\" class=\"headerlink\" title=\"is_hidden_code()\"></a>is_hidden_code()</h5><p>获取作品是否隐藏代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> xesapp.is_hidden_code():</span><br><span class=\"line\">    print(<span class=\"string\">&quot;作品的代码隐藏了&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;作品的代码没有隐藏&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-description\"><a href=\"#get-description\" class=\"headerlink\" title=\"get_description()\"></a>get_description()</h5><p>获取作品的说明</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_description())</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-comments\"><a href=\"#get-comments\" class=\"headerlink\" title=\"get_comments()\"></a>get_comments()</h5><p>获取作品一共有多少人评论</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_comments())</span><br></pre></td></tr></table></figure>\n<h5 id=\"is-comments\"><a href=\"#is-comments\" class=\"headerlink\" title=\"is_comments()\"></a>is_comments()</h5><p>获取从这个作品初始化到现在是否有人评论</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> xesapp.is_comments():</span><br><span class=\"line\">    print(<span class=\"string\">&quot;评论了&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;没有评论&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"cmt-url\"><a href=\"#cmt-url\" class=\"headerlink\" title=\"cmt(url)\"></a>cmt(url)</h2><p>这个是一个获取评论的api</p>\n<h3 id=\"dta-dic\"><a href=\"#dta-dic\" class=\"headerlink\" title=\"dta_dic\"></a>dta_dic</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#获取一个包含所有评论的列表</span></span><br><span class=\"line\">a=cmt(<span class=\"string\">&quot;http://code.xueersi.com/home/project/detail?lang=code&amp;pid=9785566&amp;version=offline&amp;form=python&amp;langType=python&quot;</span>)</span><br><span class=\"line\">print(a.dta_dic)</span><br><span class=\"line\"><span class=\"comment\">#输出</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">（略）</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"fmt（）\"><a href=\"#fmt（）\" class=\"headerlink\" title=\"fmt（）\"></a>fmt（）</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#返回一个字符串（评论的字符格式化）</span></span><br><span class=\"line\">a=cmt(<span class=\"string\">&quot;http://code.xueersi.com/home/project/detail?lang=code&amp;pid=9785566&amp;version=offline&amp;form=python&amp;langType=python&quot;</span>)</span><br><span class=\"line\">print(a.fmt())</span><br><span class=\"line\"><span class=\"comment\">#部分输出</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">[2020-10-17 20:52:11]</span></span><br><span class=\"line\"><span class=\"string\">\t一维回复严子昱:快点=-=不取关就pen你</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-17 20:51:31]</span></span><br><span class=\"line\"><span class=\"string\">\t一维回复严子昱:有时关注我这个人，并不是太好的选择</span></span><br><span class=\"line\"><span class=\"string\">\t取关我吧，有事请加qq：3456198711</span></span><br><span class=\"line\"><span class=\"string\">\t微信：huiyu431249891</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-17 18:34:35]</span></span><br><span class=\"line\"><span class=\"string\">\t俊翔回复严子昱:作者是喜欢互关吗？居然关注我这样的蚂蚁，太感动了</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-15 21:56:11]</span></span><br><span class=\"line\"><span class=\"string\">\t陈奕翰回复严子昱:考虑合作嘛</span></span><br><span class=\"line\"><span class=\"string\">\t</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-10 19:29:26]</span></span><br><span class=\"line\"><span class=\"string\">\t茜幻回复严子昱:作者在吗</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-10 19:10:42]</span></span><br><span class=\"line\"><span class=\"string\">\t蒋狄璁回复严子昱:互关</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">.......(略)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"sorted（by-“likes”-reverse-True）\"><a href=\"#sorted（by-“likes”-reverse-True）\" class=\"headerlink\" title=\"sorted（by=“likes”,reverse=True）\"></a>sorted（by=“likes”,reverse=True）</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#设置排序</span></span><br><span class=\"line\">a=cmt(<span class=\"string\">&quot;http://code.xueersi.com/home/project/detail?lang=code&amp;pid=9785566&amp;version=offline&amp;form=python&amp;langType=python&quot;</span>)</span><br><span class=\"line\">a.<span class=\"built_in\">sorted</span>(by=<span class=\"string\">&quot;likes&quot;</span>,reverse=<span class=\"literal\">True</span>)<span class=\"comment\">#reverse为 从高到低排列</span></span><br><span class=\"line\">print(a.fmt())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">[2020-10-15 21:56:11]</span></span><br><span class=\"line\"><span class=\"string\">\t陈奕翰回复严子昱:考虑合作嘛</span></span><br><span class=\"line\"><span class=\"string\">\t</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-17 20:52:11]</span></span><br><span class=\"line\"><span class=\"string\">\t一维回复严子昱:快点=-=不取关就pen你</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-17 18:34:35]</span></span><br><span class=\"line\"><span class=\"string\">\t俊翔回复严子昱:作者是喜欢互关吗？居然关注我这样的蚂蚁，太感动了</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-01 20:51:57]</span></span><br><span class=\"line\"><span class=\"string\">\t王玎珰回复严子昱:啊这</span></span><br><span class=\"line\"><span class=\"string\">...（略）</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"xesuser（获取学而思站上某个用户的数据！已修复！）\"><a href=\"#xesuser（获取学而思站上某个用户的数据！已修复！）\" class=\"headerlink\" title=\"xesuser（获取学而思站上某个用户的数据！已修复！）\"></a><strong>xesuser（获取学而思站上某个用户的数据！已修复！）</strong></h1><p><u><strong><em>注意！！</em></strong></u></p>\n<p><u><strong><em>千万一定不要超高频率请求，否则会报错！！！</em></strong></u></p>\n<p>作者：严子昱</p>\n<h2 id=\"导入方式-3\"><a href=\"#导入方式-3\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.xesuser <span class=\"keyword\">import</span>*</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"get-user-id-“作品网址”\"><a href=\"#get-user-id-“作品网址”\" class=\"headerlink\" title=\"get_user_id(“作品网址”)\"></a>get_user_id(“作品网址”)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user_id=get_user_id(<span class=\"string\">&quot;作品网址&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#本作品最重要的函数，这个获取作品网址的作者的user_id</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"get-fans-user-id\"><a href=\"#get-fans-user-id\" class=\"headerlink\" title=\"get__fans(user_id)\"></a>get__fans(user_id)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fans_info=get_fans(user_id) </span><br><span class=\"line\"><span class=\"comment\">#这个user_id从上面拿</span></span><br><span class=\"line\"><span class=\"comment\">#获取这个人粉丝的大部分信息，返回一个列表</span></span><br><span class=\"line\"><span class=\"comment\">#每项是一个字典：</span></span><br><span class=\"line\">   fans_info[x][<span class=\"string\">&quot;realname&quot;</span>]<span class=\"comment\">#:获取第x项他的名字</span></span><br><span class=\"line\">   fans_info[x][<span class=\"string\">&quot;avatar_path&quot;</span>]<span class=\"comment\">#:获取第x项他头像的url</span></span><br><span class=\"line\">   fans_info[x][<span class=\"string\">&quot;fans&quot;</span>]<span class=\"comment\">#:获取第x项他的粉丝数量</span></span><br><span class=\"line\">   fans_info[x][<span class=\"string\">&quot;follows&quot;</span>]<span class=\"comment\">#:获取第x项他的关注数量</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"get-follows-user-id\"><a href=\"#get-follows-user-id\" class=\"headerlink\" title=\"get_follows(user_id)\"></a>get_follows(user_id)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">follows_info=get_follows(user_id) </span><br><span class=\"line\"><span class=\"comment\">#大体和get_fans一样</span></span><br><span class=\"line\"><span class=\"comment\">#获取这个人粉丝的大部分信息，返回一个列表</span></span><br><span class=\"line\"><span class=\"comment\">#每项是一个字典：</span></span><br><span class=\"line\">   follows_info[x][<span class=\"string\">&quot;realname&quot;</span>]<span class=\"comment\">#:获取第x项他的名字</span></span><br><span class=\"line\">   follows_info[x][<span class=\"string\">&quot;avatar_path&quot;</span>]<span class=\"comment\">#:获取第x项他头像的url</span></span><br><span class=\"line\">   follows_info[x][<span class=\"string\">&quot;fans&quot;</span>]<span class=\"comment\">#:获取第x项他的粉丝数量</span></span><br><span class=\"line\">   follows_info[x][<span class=\"string\">&quot;follows&quot;</span>]<span class=\"comment\">#:获取第x项他的关注数量</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"get-info-user-id\"><a href=\"#get-info-user-id\" class=\"headerlink\" title=\"get_info(user_id)\"></a>get_info(user_id)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user_info=get_info(user_id) </span><br><span class=\"line\"><span class=\"comment\">#获取这个人的大部分信息，返回一个字典</span></span><br><span class=\"line\">user_info[<span class=\"string\">&quot;name&quot;</span>]<span class=\"comment\">#:返回这个人的名字</span></span><br><span class=\"line\">user_info[<span class=\"string\">&quot;slogan&quot;</span>]<span class=\"comment\">#:返回这个人的口号(名字下面那段)</span></span><br><span class=\"line\">user_info[<span class=\"string\">&quot;fans&quot;</span>]<span class=\"comment\">#:返回这个人的粉丝数量</span></span><br><span class=\"line\">user_info[<span class=\"string\">&quot;follows&quot;</span>]<span class=\"comment\">#:返回这个人的关注数量</span></span><br><span class=\"line\">user_info[<span class=\"string\">&quot;icon&quot;</span>]<span class=\"comment\">#:返回这个人的头像url</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"user-user-id\"><a href=\"#user-user-id\" class=\"headerlink\" title=\"user(user_id)\"></a>user(user_id)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user=user(user_id)<span class=\"comment\">#这个其实大部分都是前面的内容，不过前面的加载比较慢，这个适用需要数据比较多的程序</span></span><br><span class=\"line\">user.works<span class=\"comment\">#：获取发布的作品总数</span></span><br><span class=\"line\"><span class=\"comment\">#user.work_info#：获取发布的作品的信息，返回一个列表，列表的每项都是字典</span></span><br><span class=\"line\">user.work_num<span class=\"comment\">#：获取一共有多少个作品（曾经发过的也算）</span></span><br><span class=\"line\"></span><br><span class=\"line\">user.fans<span class=\"comment\">#：获取粉丝总数</span></span><br><span class=\"line\"><span class=\"comment\">#user.fans_info#：获取粉丝信息（和get_fans返回一样的信息）</span></span><br><span class=\"line\"></span><br><span class=\"line\">user.follows<span class=\"comment\">#：获取关注总数</span></span><br><span class=\"line\"><span class=\"comment\">#user.follows_info#：获取关注信息（和get_follows返回一样的信息）</span></span><br><span class=\"line\">user.like_num<span class=\"comment\">#：获取点赞总数</span></span><br><span class=\"line\">user.view_num<span class=\"comment\">#：获取浏览总数</span></span><br><span class=\"line\">user.favorites<span class=\"comment\">#：获取收藏总数</span></span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n<h1 id=\"xesapi\"><a href=\"#xesapi\" class=\"headerlink\" title=\"xesapi\"></a>xesapi</h1><h2 id=\"导入方式-4\"><a href=\"#导入方式-4\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.xesapi <span class=\"keyword\">import</span>* </span><br></pre></td></tr></table></figure>\n<h2 id=\"get-api-url\"><a href=\"#get-api-url\" class=\"headerlink\" title=\"get_api(url)\"></a>get_api(url)</h2><p>返回url这个api上的数据</p>\n<p>示例-&gt;<a href=\"http://code.xueersi.com/api/index/works/modules\">http://code.xueersi.com/api/index/works/modules</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(get_api(<span class=\"string\">&quot;http://code.xueersi.com/api/index/works/modules&quot;</span>))</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">==输出==</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;stat&#x27;: 1, &#x27;status&#x27;: 1, &#x27;msg&#x27;: &#x27;操作成功&#x27;, &#x27;data&#x27;: [&#123;&#x27;title&#x27;: &#x27;可多推荐&#x27;, &#x27;simple_title&#x27;: &#x27;推荐&#x27;, &#x27;lines&#x27;: 2, &#x27;projects&#x27;: [&#123;&#x27;id&#x27;: 11584188, &#x27;name&#x27;: &#x27;圆圈战争&#x27;, &#x27;category&#x27;: 1, &#x27;type&#x27;: &#x27;normal&#x27;, &#x27;user_id&#x27;: 9686613, &#x27;thumbnail&#x27;: &#x27;https://rescode.xesimg.com/hufu-code/common/mit/32f6766530dc287c1c8ab00c634e352b.png&#x27;, &#x27;published&#x27;: 1, &#x27;published_at&#x27;: &#x27;2020-11-18 19:42:53&#x27;, &#x27;modified_at&#x27;: &#x27;2020-11-18 19:42:53&#x27;, &#x27;likes&#x27;: 4, &#x27;views&#x27;: 333, &#x27;comments&#x27;: 0, &#x27;version&#x27;: &#x27;3.0&#x27;, &#x27;source&#x27;: &#x27;xes_live&#x27;, &#x27;deleted_at&#x27;: None, &#x27;original_id&#x27;: 2, &#x27;created_at&#x27;: &#x27;2020-11-17 20:46:43&#x27;, &#x27;updated_at&#x27;: &#x27;2020-11-20 21:25:02&#x27;, &#x27;weight&#x27;: 1, &#x27;adapter&#x27;: &#x27;&#x27;, &#x27;hidden_code&#x27;: 2, &#x27;source_code_views&#x27;: 3, &#x27;removed&#x27;: 0, &#x27;first_frame&#x27;: &#x27;https://rescode.xesimg.com/hufu-code/common/mit/32f6766530dc287c1c8ab00c634e352b.png&#x27;, &#x27;unlikes&#x27;: 5, &#x27;project_id&#x27;: 11584188, &#x27;works_id&#x27;: 11584188, &#x27;lang&#x27;: &#x27;scratch&#x27;, &#x27;popular_score&#x27;: 12.13, &#x27;username&#x27;: &#x27;冯嘉睿&#x27;, &#x27;user_avatar&#x27;: &#x27;https://oot.xesimg.com/user/h/cc1e41a2dc511b8108a05b8f0dc8cf69.jpg&#x27;, &#x27;project_type&#x27;: &#x27;scratch&#x27;, &#x27;topic_id&#x27;: &#x27;CS_11584188&#x27;&#125;, &#123;&#x27;id&#x27;: 11027485, &#x27;name&#x27;: &#x27;井字棋小游戏(双人)&#x27;, &#x27;category&#x27;: 1, &#x27;type&#x27;: &#x27;normal&#x27;, &#x27;user_id&#x27;: 7818569, &#x27;thumbnail&#x27;: </span></span><br><span class=\"line\"><span class=\"string\">...(略)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"get-page-page-lang-””-tag-””-type-”popular”\"><a href=\"#get-page-page-lang-””-tag-””-type-”popular”\" class=\"headerlink\" title=\"get_page(page,lang=””,tag=””,type=”popular”)\"></a>get_page(page,lang=””,tag=””,type=”popular”)</h2><p>page：页码</p>\n<p>lang：语言</p>\n<p>tag：标签</p>\n<p>type：爬取页面类型（默认为popular）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(get_page(<span class=\"number\">1</span>,<span class=\"string\">&quot;cpp&quot;</span>))</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">==输出==</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;page&#x27;: &#x27;1&#x27;, &#x27;per_page&#x27;: &#x27;35&#x27;, &#x27;total&#x27;: 7000, &#x27;data&#x27;: [&#123;&#x27;id&#x27;: 10443775, &#x27;name&#x27;: &#x27;教你如何黑电脑&#x27;, &#x27;category&#x27;: 1, &#x27;type&#x27;: &#x27;normal&#x27;, &#x27;user_id&#x27;: 8730932, &#x27;thumbnail&#x27;: &#x27;https://livefile.xesimg.com/programme/assets/b33adba6678f5e477f65d0f36d5581eb.jpg&#x27;, &#x27;la</span></span><br><span class=\"line\"><span class=\"string\">...(略)</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"page-all-tags\"><a href=\"#page-all-tags\" class=\"headerlink\" title=\"page_all_tags\"></a>page_all_tags</h2><p>这个是一个常量(就是上面那个tag可以取得量)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(page_all_tags)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">==输出==</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;all_tags&#x27;: [&#x27;游戏&#x27;, &#x27;动画&#x27;, &#x27;故事&#x27;, &#x27;模拟&#x27;, &#x27;艺术&#x27;, &#x27;教程&#x27;, &#x27;算法&#x27;, &#x27;海龟&#x27;, &#x27;沙盒专区&#x27;, &#x27;其他&#x27;], &#x27;tips&#x27;: &#x27;1、为什么要给作品打分类标签？n为你的作品选择分类，更有利于其他小朋友精准的找到你的作品，这样，你的作品被别人看到的机率会更大哦。n一定要准确的选择分类，不要随便选择不或者不选呦！nn2、如何为自己的作品选择分类？n要想准确的选择分类，首先要先知道每个分类代表什么意思，一起来了解一下吧！n游戏：射击，冒险，跑酷，换装等等这些都算作游戏。n动画：用编程实现动画效果的作品。n故事：用编程表达一个奇妙的故事，比如写小说。n模拟：视频软件模拟器，音乐软件模拟器，浏览器模拟器，甚至做个模拟的系统。n艺术：美术，音乐等等类型的作品都可以。n教程：如果你是大牛，就快做作品教别人和你一样优秀吧！n算法：算法是解决一个问题的方法，C++用户请看这里。n海龟：海龟画图是python语言中专门用户画图的方法呦！n沙盒专区：MC？mini？为什么不自己创作一个类似的作品呢？n其他：如果没想好自己作品的分类，就选这个吧。&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"pygame-extend（pygame扩展）\"><a href=\"#pygame-extend（pygame扩展）\" class=\"headerlink\" title=\"pygame_extend（pygame扩展）\"></a>pygame_extend（pygame扩展）</h1><p>导入方式：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.pygame_extend <span class=\"keyword\">import</span> *</span><br></pre></td></tr></table></figure>\n<p>(这样顺便导入pygame和sys欸嘿嘿)</p>\n<p>！没写完教程等需求多了在说把！</p>\n<h1 id=\"tkinter-extend（tkinter扩展）\"><a href=\"#tkinter-extend（tkinter扩展）\" class=\"headerlink\" title=\"tkinter_extend（tkinter扩展）\"></a>tkinter_extend（tkinter扩展）</h1><h2 id=\"导入方式-5\"><a href=\"#导入方式-5\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.tkinter_extend <span class=\"keyword\">import</span>*</span><br></pre></td></tr></table></figure>\n<p>作者：严子昱</p>\n<h2 id=\"inpu-box\"><a href=\"#inpu-box\" class=\"headerlink\" title=\"inpu_box\"></a>inpu_box</h2><p>(class)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#创建(就当button控件用)：</span></span><br><span class=\"line\">a=inpu_box(tk,函数名,**按钮的配置)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#打包：</span></span><br><span class=\"line\">a.pack(**pack的配置)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#配置：</span></span><br><span class=\"line\">a.config_entry(**文本框的配置)</span><br><span class=\"line\">a.config_button(**按钮的配置)</span><br><span class=\"line\"><span class=\"comment\">#其实你基本可以当做Entry来用，除了初始化语句还有配置以外基本都是一样的</span></span><br><span class=\"line\"><span class=\"comment\">#（剩下的教程还没写完）</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"jitter\"><a href=\"#jitter\" class=\"headerlink\" title=\"jitter()\"></a>jitter()</h2><p>作用：抖动窗口（需要在窗口加载完毕后使用，否则可能会出现鬼畜）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tkinter <span class=\"keyword\">import</span> *</span><br><span class=\"line\">root = Tk()</span><br><span class=\"line\">a = Text(root)</span><br><span class=\"line\">a.pack(fill=BOTH)</span><br><span class=\"line\"></span><br><span class=\"line\">jitter(root)</span><br><span class=\"line\">root.mainloop()</span><br></pre></td></tr></table></figure>\n<h2 id=\"center\"><a href=\"#center\" class=\"headerlink\" title=\"center()\"></a>center()</h2><p>作用：将窗口居中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tkinter <span class=\"keyword\">import</span> *</span><br><span class=\"line\">root = Tk()</span><br><span class=\"line\">a = Text(root)</span><br><span class=\"line\">a.pack(fill=BOTH)</span><br><span class=\"line\"></span><br><span class=\"line\">jitter(root)</span><br><span class=\"line\">root.mainloop()</span><br></pre></td></tr></table></figure>\n<h1 id=\"dsfAdmin（自动安装第三方库）\"><a href=\"#dsfAdmin（自动安装第三方库）\" class=\"headerlink\" title=\"dsfAdmin（自动安装第三方库）\"></a>dsfAdmin（自动安装第三方库）</h1><p>开发者|严子昱</p>\n<p>(暂时只支持windows)</p>\n<h2 id=\"导入方式-6\"><a href=\"#导入方式-6\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.dsfAdmin <span class=\"keyword\">import</span>*</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"get-pakages\"><a href=\"#get-pakages\" class=\"headerlink\" title=\"get_pakages()\"></a>get_pakages()</h3><p>作用：获取已安装每个包的版本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(get_pakages())):</span><br><span class=\"line\">    print(<span class=\"string\">&quot;库&quot;</span>+x[<span class=\"number\">0</span>].center(<span class=\"number\">19</span>,<span class=\"string\">&quot; &quot;</span>),<span class=\"string\">&quot;版本&quot;</span>+x[<span class=\"number\">1</span>].center(<span class=\"number\">10</span>,<span class=\"string\">&quot; &quot;</span>))</span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h3 id=\"find-pakages-pakages-ver-None\"><a href=\"#find-pakages-pakages-ver-None\" class=\"headerlink\" title=\"find_pakages(pakages,ver=None)\"></a>find_pakages(pakages,ver=None)</h3><p>作用：获取时否安装pakage这个库，ver代表版本，默认不进行版本监测</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> find_pakages(<span class=\"string\">&quot;xingyunlib&quot;</span>):</span><br><span class=\"line\">    print(<span class=\"string\">&quot;你有安装xingyunlib库！&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;你没有安装xingyunlib库！&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"upgrade-pakages-pakage\"><a href=\"#upgrade-pakages-pakage\" class=\"headerlink\" title=\"upgrade_pakages(pakage)\"></a>upgrade_pakages(pakage)</h3><p>作用：更新pakage这个库</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upgrade_pakages(“xingyunlib”)</span><br></pre></td></tr></table></figure>\n<h3 id=\"install-pakages-pakage\"><a href=\"#install-pakages-pakage\" class=\"headerlink\" title=\"install_pakages(pakage)\"></a>install_pakages(pakage)</h3><p>作用：安装这个库,常和find_pakages一起用</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> find_pakages(<span class=\"string\">&quot;alsolib&quot;</span>):</span><br><span class=\"line\">\tinstall_pakages(<span class=\"string\">&quot;alsolib&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#注意这个，这个非常重要的,可以在没安装第三方库的时候自动下载库</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"dump-pip-list-filename\"><a href=\"#dump-pip-list-filename\" class=\"headerlink\" title=\"dump_pip_list(filename)\"></a>dump_pip_list(filename)</h3><p>作用：将库的list保存到这个文件里面</p>\n<h3 id=\"load-pip-list-filename\"><a href=\"#load-pip-list-filename\" class=\"headerlink\" title=\"load_pip_list(filename)\"></a>load_pip_list(filename)</h3><p>作用：将这个文件里面的库导出到正在使用的编译器</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dump_pip_list(<span class=\"string\">&quot;pip_pakages&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#同目录会出现一个‘pip_pakages.pip’文件</span></span><br><span class=\"line\"><span class=\"comment\"># |把这个文件移到另一台电脑</span></span><br><span class=\"line\"><span class=\"comment\"># v</span></span><br><span class=\"line\">load_pip_list(<span class=\"string\">&quot;pip_pakages&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#然后这个程序就会自动安装在第一台电脑上所有的第三方库了</span></span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"image（pillow及wordcloud扩展）\"><a href=\"#image（pillow及wordcloud扩展）\" class=\"headerlink\" title=\"image（pillow及wordcloud扩展）\"></a>image（pillow及wordcloud扩展）</h1><p>开发者|严子昱</p>\n<h2 id=\"导入方式-7\"><a href=\"#导入方式-7\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.image <span class=\"keyword\">import</span>*</span><br></pre></td></tr></table></figure>\n<h2 id=\"resize-filename-XY\"><a href=\"#resize-filename-XY\" class=\"headerlink\" title=\"resize(filename,XY)\"></a>resize(filename,XY)</h2><p>作用：将filename这个文件变成XY大的文件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resive(<span class=\"string\">&quot;img1.png&quot;</span>,(<span class=\"number\">100</span>,<span class=\"number\">100</span>))</span><br><span class=\"line\"><span class=\"comment\">#将img1.png变成100x100的缩略图</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"cloud-text-font-path-savafile-None-image-None-background-color-”white”-color-True\"><a href=\"#cloud-text-font-path-savafile-None-image-None-background-color-”white”-color-True\" class=\"headerlink\" title=\"cloud(text,font_path,savafile=None,image=None,background_color=”white”,color=True)\"></a>cloud(text,font_path,savafile=None,image=None,background_color=”white”,color=True)</h2><p>（这个函数要安装numpy和wordcloud库）</p>\n<p>作用：text为列表，font_path为字体文件的位置</p>\n<p>savafile为保存的文件名，image为模板图片的名字</p>\n<p>background_color为背景颜色 color为是否根据模板图片的颜色上色（在有模板的情况下）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">text=<span class=\"string\">&quot;ahuidgayugwuydgatywefuwfdytafayuofdwtyfauyfatyfautfatyfatyufduyoawfgtydfeutoaftyaf&quot;</span>.split(<span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">cloud(text,<span class=\"string\">&quot;(你的字体文件)&quot;</span>,<span class=\"string\">&quot;all.png&quot;</span>)</span><br><span class=\"line\">os.startfile(<span class=\"string\">&quot;all.png&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"add-text-img-text-args\"><a href=\"#add-text-img-text-args\" class=\"headerlink\" title=\"add_text(img, text, **args)\"></a>add_text(img, text, **args)</h2><p>这个**args包括以下内容</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">font=（”字体文件.ttf”，字号）</span><br><span class=\"line\">XY=（x坐标，y坐标）<span class=\"comment\">#这个坐标以图片左上角为0，0（原点）</span></span><br><span class=\"line\">fillColor=颜色（建议使用<span class=\"number\">16</span>进制颜色）</span><br><span class=\"line\">show_img=<span class=\"literal\">True</span><span class=\"comment\">#设置是否在修改完成后显示图片，默认为False</span></span><br><span class=\"line\">change_img=<span class=\"string\">&quot;newimgname.png&quot;</span><span class=\"comment\">#设置输出的图片文件名</span></span><br><span class=\"line\">add_text(<span class=\"string\">&quot;原图.png&quot;</span>,<span class=\"string\">&quot;广告&quot;</span>,font=font,XY=XY,fillColor=fillColor,show_img=show_img,change_img=change_img)</span><br></pre></td></tr></table></figure>\n<h1 id=\"user（自定义用户类）\"><a href=\"#user（自定义用户类）\" class=\"headerlink\" title=\"user（自定义用户类）\"></a>user（自定义用户类）</h1><p>开发者|严子昱</p>\n<h2 id=\"导入方式-8\"><a href=\"#导入方式-8\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.user <span class=\"keyword\">import</span> *</span><br></pre></td></tr></table></figure>\n<p>初始化：</p>\n<h2 id=\"user-login-filename-None\"><a href=\"#user-login-filename-None\" class=\"headerlink\" title=\"user_login(filename=None)\"></a>user_login(filename=None)</h2><p>filename:之前的保存数据的文件名，如果没有保存过请不要写filename</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user=user_login()</span><br><span class=\"line\"><span class=\"comment\">#导入之前的数据</span></span><br><span class=\"line\">user=user_login(<span class=\"string\">&quot;&lt;数据文件名称&gt;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>注册：</p>\n<h4 id=\"user-registered-name-key-flag-True-filename-None\"><a href=\"#user-registered-name-key-flag-True-filename-None\" class=\"headerlink\" title=\"user.registered(name,key,flag=True,filename=None)\"></a>user.registered(name,key,flag=True,filename=None)</h4><p>name:注册的名字</p>\n<p>key:密码</p>\n<p>flag设置为True:如果已经导入数据则返回False(如果已经注册过了就不让你注册)否则返回True(注册成功）</p>\n<p>flag设置为False：都可以注册</p>\n<p>filename：保存数据文件的名称</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">type</span>=user.registered(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入你的名字：&quot;</span>),<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入你的密码：&quot;</span>),flag=<span class=\"literal\">True</span>,filename=<span class=\"string\">&quot;data&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">type</span>==<span class=\"literal\">True</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;注册成功！&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;注册失败！&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"user-login-name-key\"><a href=\"#user-login-name-key\" class=\"headerlink\" title=\"user.login(name,key)\"></a>user.login(name,key)</h4><p>name:注册时的名称</p>\n<p>key:密码</p>\n<p>返回一个bool值，为True或False</p>\n<p>True：验证密码正确 False：验证失败</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">type</span>=user.login(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入你的名字：&quot;</span>),<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入你的密码：&quot;</span>))</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">type</span>==<span class=\"literal\">True</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;注册成功！&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;注册失败！&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"user-load-filename\"><a href=\"#user-load-filename\" class=\"headerlink\" title=\"user.load(filename)\"></a>user.load(filename)</h4><p>导入保存的数据，filename为文件名</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">b=user_login()</span><br><span class=\"line\">b.load(<span class=\"string\">&quot;你保存的文件名&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h1 id=\"mail\"><a href=\"#mail\" class=\"headerlink\" title=\"mail\"></a>mail</h1><h2 id=\"导入方式-9\"><a href=\"#导入方式-9\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> mail</span><br></pre></td></tr></table></figure>\n<p>用法：</p>\n<h2 id=\"mail-send-to-title-txt\"><a href=\"#mail-send-to-title-txt\" class=\"headerlink\" title=\"mail.send(to,title,txt)\"></a>mail.send(to,title,txt)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mail.send(<span class=\"string\">&quot;3161399620@qq.com&quot;</span>,<span class=\"string\">&quot;hello python&quot;</span>,<span class=\"string\">&quot;hello world!&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>to:发送给的邮箱</p>\n<p>title:标题</p>\n<p>txt:发送的文本</p>\n<h1 id=\"err（自定义抛出错误）\"><a href=\"#err（自定义抛出错误）\" class=\"headerlink\" title=\"err（自定义抛出错误）\"></a>err（自定义抛出错误）</h1><h2 id=\"导入方式-10\"><a href=\"#导入方式-10\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> err</span><br></pre></td></tr></table></figure>\n<p>当你有一些程序想在特定的情况终止怎么办？</p>\n<p>试试下面的程序</p>\n<h2 id=\"err-txt\"><a href=\"#err-txt\" class=\"headerlink\" title=\"err(txt)\"></a>err(txt)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> err</span><br><span class=\"line\">a=<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入1：&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> a!=<span class=\"string\">&quot;1&quot;</span>:<span class=\"comment\">#如果非1</span></span><br><span class=\"line\">    err.err(<span class=\"string\">&quot;你没有输入1。。。&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"comment\">#程序自然退出</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"http-spider（爬虫）\"><a href=\"#http-spider（爬虫）\" class=\"headerlink\" title=\"http_spider（爬虫）\"></a>http_spider（爬虫）</h1><h2 id=\"导入方式-11\"><a href=\"#导入方式-11\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> http_spider</span><br></pre></td></tr></table></figure>\n<h2 id=\"load-requests-str-between-line\"><a href=\"#load-requests-str-between-line\" class=\"headerlink\" title=\"load_requests(str,between,line)\"></a>load_requests(str,between,line)</h2><p>默认值：between=”:” ; line=”\\n”</p>\n<p>between：分隔符</p>\n<p>line：换行符</p>\n<p>这个概念有点难理解，具体看下面示例，能不能听懂由天命</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> http_spider</span><br><span class=\"line\">header=http_spider.load_requests(<span class=\"string\">&quot;&quot;&quot;Accept: application/json, text/plain, */*</span></span><br><span class=\"line\"><span class=\"string\">Accept-Encoding: gzip, deflate</span></span><br><span class=\"line\"><span class=\"string\">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8</span></span><br><span class=\"line\"><span class=\"string\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.116 Safari/537.36&quot;&quot;&quot;</span>,<span class=\"string\">&quot;: &quot;</span>,<span class=\"string\">&quot;\\n&quot;</span>)<span class=\"comment\">#那段字符串是从浏览器复制出来的</span></span><br><span class=\"line\">print(header)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">----------</span></span><br><span class=\"line\"><span class=\"string\">输出：</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;Accept&#x27;: &#x27;application/json, text/plain, */*&#x27;, &#x27;Accept-Encoding&#x27;: &#x27;gzip, deflate&#x27;, &#x27;Accept-Language&#x27;: &#x27;zh-CN,zh;q=0.9,en;q=0.8&#x27;, &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.116 Safari/537.36&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>主要作用是自动分析从浏览器复制出来的headers</p>\n<h2 id=\"spider-args-kwargs\"><a href=\"#spider-args-kwargs\" class=\"headerlink\" title=\"spider(*args,**kwargs)\"></a>spider(*args,**kwargs)</h2><p>这个函数就明显很水，完全是凑数用的，不过对于一些新手来说还是有点用的</p>\n<p>其实就是requests的变体，增加了一个判断是否状态码是否10x，40x，50x的功能而已</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> http_spider</span><br><span class=\"line\">print(http_spider.spider(<span class=\"string\">&quot;http://code.xueersi.com/api/compilers/6?id=6&quot;</span>).text)</span><br><span class=\"line\"><span class=\"comment\">#略去输出结果</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ua-list\"><a href=\"#ua-list\" class=\"headerlink\" title=\"ua_list\"></a>ua_list</h2><p>话不多说，上代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> http_spider</span><br><span class=\"line\">print(http_spider.ua_list)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">输出：</span></span><br><span class=\"line\"><span class=\"string\">[&#x27;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)&#x27;, &#x27;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)&#x27;, &#x27;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)&#x27;, &#x27;Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1)&#x27;, &#x27;Mozilla/5.0 (compatible; rv:1.9.1) Gecko/20090702 Firefox/3.5&#x27;, &#x27;Mozilla/5.0 (compatible; rv:1.9.2) Gecko/20100101 Firefox/3.6&#x27;, &#x27;Mozilla/5.0 (compatible; rv:2.0) Gecko/20110101 Firefox/4.0&#x27;, &#x27;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0.2) Gecko/20100101 Firefox/6.0.2&#x27;, &#x27;Mozilla/5.0 (compatible) AppleWebKit/534.21 (KHTML, like Gecko) Chrome/11.0.682.0 Safari/534.21&#x27;, &#x27;Opera/9.80 (compatible; U) Presto/2.7.39 Version/11.00&#x27;, &#x27;Mozilla/5.0 (compatible; U) AppleWebKit/533.1 (KHTML, like Gecko) Maxthon/3.0.8.2 Safari/533.1&#x27;, &#x27;Mozilla/5.0 (Linux; U; Android 2.2) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1 &#x27;, &#x27;Mozilla/5.0 (iPhone; U; CPU OS 4_2_1 like Mac OS X) AppleWebKit/532.9 (KHTML, like Gecko) Version/5.0.3 Mobile/8B5097d Safari/6531.22.7&#x27;, &#x27;Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/4.0.2 Mobile/8C148 Safari/6533.18.5&#x27;, &#x27;Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_7) AppleWebKit/534.16+ (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<p>这是一个列表，里面有很多笔者搜集的ua，（截至2020-9-19）收录了15个ua，足够你用了</p>\n<h2 id=\"get-xes-url-url\"><a href=\"#get-xes-url-url\" class=\"headerlink\" title=\"get_xes_url(url)\"></a>get_xes_url(url)</h2><p>爬取一个xes的页面</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> http_spider</span><br><span class=\"line\">print(http_spider.get_xes_url(<span class=\"string\">&quot;http://code.xueersi.com/api/compilers/6?id=6&quot;</span>))</span><br><span class=\"line\"><span class=\"comment\">#略去输出结果</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"data（保存数据）\"><a href=\"#data（保存数据）\" class=\"headerlink\" title=\"data（保存数据）\"></a>data（保存数据）</h1><p>数据类方法</p>\n<p>2020-10-1</p>\n<p>作者：严子昱</p>\n<h2 id=\"导入方式-12\"><a href=\"#导入方式-12\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> data</span><br></pre></td></tr></table></figure>\n<h2 id=\"Data\"><a href=\"#Data\" class=\"headerlink\" title=\"Data\"></a>Data</h2><p>初始化方法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dta=data.Data(filename,find=<span class=\"literal\">False</span>)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">filename:文件名，若没有则创建</span></span><br><span class=\"line\"><span class=\"string\">find:搜索模式，若没有filename则报错</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<p>输入数据：</p>\n<h3 id=\"change-data-data\"><a href=\"#change-data-data\" class=\"headerlink\" title=\"change_data(data)\"></a>change_data(data)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dta=data.Data(filename,find=<span class=\"literal\">False</span>)</span><br><span class=\"line\"><span class=\"comment\">#略</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">data参数支持的数据:</span></span><br><span class=\"line\"><span class=\"string\">list,bool,tutle,str,set,dict,int,float</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">dta.change_data(<span class=\"string\">&quot;加油！&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"eval-data\"><a href=\"#eval-data\" class=\"headerlink\" title=\"eval_data()\"></a>eval_data()</h3><p>把从文件中保存的数据转换成可执行内容</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;fruit.txt内容：</span></span><br><span class=\"line\"><span class=\"string\">[&quot;apple&quot;,&quot;orange&quot;]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">dta=data.Data(<span class=\"string\">&quot;fruit.txt&quot;</span>,find=<span class=\"literal\">False</span>)</span><br><span class=\"line\">dta.eval_data()</span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> dta.data:</span><br><span class=\"line\">    print(<span class=\"string\">f&quot;fruit:<span class=\"subst\">&#123;x&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">输出结果：</span></span><br><span class=\"line\"><span class=\"string\">fruit:apple</span></span><br><span class=\"line\"><span class=\"string\">fruit:orange</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"save\"><a href=\"#save\" class=\"headerlink\" title=\"save()\"></a>save()</h3><p>保存结果到文件中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dta=data.Data(<span class=\"string\">&quot;great&quot;</span>,find=<span class=\"literal\">False</span>)</span><br><span class=\"line\">dta.change_data([<span class=\"string\">&quot;hhc&quot;</span>,<span class=\"string\">&quot;hhv&quot;</span>])</span><br><span class=\"line\">dta.save()</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;great内容:</span></span><br><span class=\"line\"><span class=\"string\">[&quot;hhc&quot;,&quot;hhv&quot;]&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"xingyunlib\"><a href=\"#xingyunlib\" class=\"headerlink\" title=\"xingyunlib\"></a>xingyunlib</h1><p>[toc]</p>\n<p>开发者：严子昱|崔轩宇</p>\n<p>v1.2.20201004</p>\n<p>#v1.2.xx以后全是正式版#</p>\n<p>#hack-20201004:修复xesuser故障</p>\n<p>版权所有，侵权必究</p>\n<p>内置函数 导入方式：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> *</span><br></pre></td></tr></table></figure>\n<h3 id=\"加密函数\"><a href=\"#加密函数\" class=\"headerlink\" title=\"加密函数\"></a>加密函数</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md=md5(<span class=\"string\">&quot;111&quot;</span>)<span class=\"comment\">#作用：用MD5加密&quot;111&quot;，返回一个字符串</span></span><br><span class=\"line\">s1=sha1(<span class=\"string\">&quot;111&quot;</span>)<span class=\"comment\">#作用：用sha1加密&quot;111&quot;，返回一个字符串</span></span><br><span class=\"line\">s256=sha256(<span class=\"string\">&quot;111&quot;</span>)<span class=\"comment\">#作用：用sha1加密&quot;111&quot;，返回一个字符串</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"颜色类\"><a href=\"#颜色类\" class=\"headerlink\" title=\"颜色类\"></a>颜色类</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">color=colorX(颜色,传进去的颜色类型)<span class=\"comment\">#类型支持&quot;rgb&quot;,&quot;hsv&quot;,&quot;hex&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#示例：</span></span><br><span class=\"line\">color=colorX((<span class=\"number\">100</span>,<span class=\"number\">100</span>,<span class=\"number\">100</span>),<span class=\"string\">&quot;rgb&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"color-color\"><a href=\"#color-color\" class=\"headerlink\" title=\"color.color\"></a>color.color</h4><p>返回颜色</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">z=color.color</span><br></pre></td></tr></table></figure>\n<h4 id=\"color-to-to-color-change-False\"><a href=\"#color-to-to-color-change-False\" class=\"headerlink\" title=\"color_to(to_color,change=False)\"></a>color_to(to_color,change=False)</h4><p>返回一个要转换的颜色</p>\n<p>to_color:转换的颜色，类型支持”rgb”,”hsv”,”hex”</p>\n<p>change：是否更改原来的颜色</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">color=colorX((<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>),<span class=\"string\">&quot;rgb&quot;</span>)<span class=\"comment\">#实例化rgb</span></span><br><span class=\"line\">color.color_to(<span class=\"string\">&quot;hex&quot;</span>,<span class=\"literal\">True</span>)<span class=\"comment\">#更改进制为16进制</span></span><br><span class=\"line\">print(color.color)<span class=\"comment\">#打印出color.color</span></span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"all（一次性导入扩展！可能出现覆盖现象！）\"><a href=\"#all（一次性导入扩展！可能出现覆盖现象！）\" class=\"headerlink\" title=\"all（一次性导入扩展！可能出现覆盖现象！）\"></a>all（一次性导入扩展！可能出现覆盖现象！）</h1><h2 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.<span class=\"built_in\">all</span> <span class=\"keyword\">import</span>*</span><br><span class=\"line\"><span class=\"comment\">#或者</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> xingyunlib.<span class=\"built_in\">all</span> <span class=\"keyword\">as</span> xingyunlib</span><br></pre></td></tr></table></figure>\n<h1 id=\"print-format（print格式化扩展）\"><a href=\"#print-format（print格式化扩展）\" class=\"headerlink\" title=\"print_format（print格式化扩展）\"></a>print_format（print格式化扩展）</h1><p>开发者：严子昱</p>\n<h2 id=\"导入方式\"><a href=\"#导入方式\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.print_format <span class=\"keyword\">import</span>*</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"print\"><a href=\"#print\" class=\"headerlink\" title=\"print()\"></a>print()</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(*<span class=\"built_in\">str</span>,t=<span class=\"number\">0</span>,sepr=<span class=\"string\">&quot; &quot;</span>,end=<span class=\"string\">&quot;\\n&quot;</span>) </span><br></pre></td></tr></table></figure>\n\n<p>我们来逐个讲解他们的用法 </p>\n<p>首先来看t参数：<br>t=每个字停留的时间(默认为不停留)<br>比如说，要每个字停留1秒，输出”nice”的代码如下：<br><code>print(&quot;nice&quot;,t=1)</code> </p>\n<p>然后我们来看end参数<br>这个end参数其实和原来print的end参数是同样的作用<br>默认是”\\n”(换行符) </p>\n<p>最后我们看sepr参数，这个参数也是和原来print的sepr是同样的作用<br>我们来看一个例子：<br><code>print(&quot;ni&quot;,&quot;e&quot;,sepr=&quot;c&quot;)</code><br>最后输出的就是“nice” </p>\n<p>我们来看大家这个很关心的变色简洁方式<br>我们在变色具体支持这些颜色：<br>红、白、绿、蓝、黄、青、紫<br>用法如下（注意是两个斜杠）：<br>‘\\‘+颜色（字的颜色变化）<br>‘\\l’+颜色（字的颜色变化,亮色）<br>‘\\b’+颜色（字的背景变化）<br>‘\\bl’+颜色（字的背景变化,亮色）<br>‘\\‘(去除所有的变色效果) </p>\n<h3 id=\"clear-os\"><a href=\"#clear-os\" class=\"headerlink\" title=\"clear_os()\"></a>clear_os()</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clear_os()</span><br></pre></td></tr></table></figure>\n<p>清除屏幕上的所有文字</p>\n<h1 id=\"xes更改（去除xeslib里面所有的print）\"><a href=\"#xes更改（去除xeslib里面所有的print）\" class=\"headerlink\" title=\"xes更改（去除xeslib里面所有的print）\"></a>xes更改（去除xeslib里面所有的print）</h1><p>最新版本的xingyunlib增加了xeslib的内容</p>\n<h2 id=\"导入方式-1\"><a href=\"#导入方式-1\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.xes <span class=\"keyword\">import</span> xeslib里面的库名</span><br></pre></td></tr></table></figure>\n<p>更改：</p>\n<p>把xeslib里面所有的print都去了</p>\n<p>修改AIspeak.speak函数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.xes <span class=\"keyword\">import</span> AIspeak</span><br><span class=\"line\">xes.AIspeak.speak(<span class=\"string\">&quot;hello python!&quot;</span>,<span class=\"string\">&quot;file.mp3&quot;</span>)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">本程序作用：</span></span><br><span class=\"line\"><span class=\"string\">将hello python！</span></span><br><span class=\"line\"><span class=\"string\">保存到file.mp3音频文件里面，并且不播放</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">xes.AIspeak.speak(<span class=\"string\">&quot;hello python!&quot;</span>)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">本程序作用：</span></span><br><span class=\"line\"><span class=\"string\">播放hello python！这段音频</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"xesapp（获取学而思站上某个作品的数据！已修复！）\"><a href=\"#xesapp（获取学而思站上某个作品的数据！已修复！）\" class=\"headerlink\" title=\"xesapp（获取学而思站上某个作品的数据！已修复！）\"></a>xesapp（获取学而思站上某个作品的数据！已修复！）</h1><p>开发者：严子昱|崔轩语</p>\n<h2 id=\"导入方式-2\"><a href=\"#导入方式-2\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.xesapp <span class=\"keyword\">import</span>*</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"xesapp-url\"><a href=\"#xesapp-url\" class=\"headerlink\" title=\"xesapp(url)\"></a>xesapp(url)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;xesapp&gt;=xesapp(url)</span><br></pre></td></tr></table></figure>\n<p>构建一个运行对象<br>url为学而思里面的py作品网址</p>\n<p>接下来讲这个类的方法：</p>\n<h5 id=\"get-hot\"><a href=\"#get-hot\" class=\"headerlink\" title=\"get_hot()\"></a>get_hot()<u></u></h5><p>返回作品的热度</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_hot())</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-cover\"><a href=\"#get-cover\" class=\"headerlink\" title=\"get_cover()\"></a>get_cover()</h5><p>返回作品封面的url</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_cover())</span><br></pre></td></tr></table></figure>\n<h5 id=\"load-cover-filename\"><a href=\"#load-cover-filename\" class=\"headerlink\" title=\"load_cover(filename)\"></a>load_cover(filename)</h5><p>下载作品封面到filename</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xesapp.load_cover(<span class=\"string\">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-view\"><a href=\"#get-view\" class=\"headerlink\" title=\"get_view()\"></a>get_view()</h5><p>返回作品的观看人数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_view())</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-hot-1\"><a href=\"#get-hot-1\" class=\"headerlink\" title=\"get_hot()\"></a>get_hot()</h5><p>返回作品的热度</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_hot())</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-like\"><a href=\"#get-like\" class=\"headerlink\" title=\"get_like()\"></a>get_like()</h5><p>返回作品的点赞数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_like())</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-unlike\"><a href=\"#get-unlike\" class=\"headerlink\" title=\"get_unlike()\"></a>get_unlike()</h5><p>返回作品的点踩数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_unlike())</span><br></pre></td></tr></table></figure>\n<h5 id=\"load-file-cache-“”\"><a href=\"#load-file-cache-“”\" class=\"headerlink\" title=\"load_file(cache = “”)\"></a>load_file(cache = “”)</h5><p>默认下载作品源文件到工作目录<br>如果cache不为空择下载到这个文件夹</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xesapp.load_file()</span><br></pre></td></tr></table></figure>\n<h5 id=\"is-like\"><a href=\"#is-like\" class=\"headerlink\" title=\"is_like()\"></a>is_like()</h5><p>判断在程序运行这个作品有没有人点赞<br>返回一个bool值<br>True：点赞了<br>False：点踩了<br>None：没有点赞也没有点踩</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> xesapp.is_like == <span class=\"literal\">True</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;点赞了&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> xesapp.is_like == <span class=\"literal\">False</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;点踩了&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;什么都没点&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"run-app\"><a href=\"#run-app\" class=\"headerlink\" title=\"run_app()\"></a>run_app()</h5><p>运行这个作品</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exec(xesapp.run_app())</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"get-published\"><a href=\"#get-published\" class=\"headerlink\" title=\"get_published()\"></a>get_published()</h5><p>获取作品第一次保存时间</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_published())</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-modified\"><a href=\"#get-modified\" class=\"headerlink\" title=\"get_modified()\"></a>get_modified()</h5><p>获取作品最后一次更新时间</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_modified())</span><br></pre></td></tr></table></figure>\n<h5 id=\"is-hidden-code\"><a href=\"#is-hidden-code\" class=\"headerlink\" title=\"is_hidden_code()\"></a>is_hidden_code()</h5><p>获取作品是否隐藏代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> xesapp.is_hidden_code():</span><br><span class=\"line\">    print(<span class=\"string\">&quot;作品的代码隐藏了&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;作品的代码没有隐藏&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-description\"><a href=\"#get-description\" class=\"headerlink\" title=\"get_description()\"></a>get_description()</h5><p>获取作品的说明</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_description())</span><br></pre></td></tr></table></figure>\n<h5 id=\"get-comments\"><a href=\"#get-comments\" class=\"headerlink\" title=\"get_comments()\"></a>get_comments()</h5><p>获取作品一共有多少人评论</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(xesapp.get_comments())</span><br></pre></td></tr></table></figure>\n<h5 id=\"is-comments\"><a href=\"#is-comments\" class=\"headerlink\" title=\"is_comments()\"></a>is_comments()</h5><p>获取从这个作品初始化到现在是否有人评论</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> xesapp.is_comments():</span><br><span class=\"line\">    print(<span class=\"string\">&quot;评论了&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;没有评论&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"cmt-url\"><a href=\"#cmt-url\" class=\"headerlink\" title=\"cmt(url)\"></a>cmt(url)</h2><p>这个是一个获取评论的api</p>\n<h3 id=\"dta-dic\"><a href=\"#dta-dic\" class=\"headerlink\" title=\"dta_dic\"></a>dta_dic</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#获取一个包含所有评论的列表</span></span><br><span class=\"line\">a=cmt(<span class=\"string\">&quot;http://code.xueersi.com/home/project/detail?lang=code&amp;pid=9785566&amp;version=offline&amp;form=python&amp;langType=python&quot;</span>)</span><br><span class=\"line\">print(a.dta_dic)</span><br><span class=\"line\"><span class=\"comment\">#输出</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">（略）</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"fmt（）\"><a href=\"#fmt（）\" class=\"headerlink\" title=\"fmt（）\"></a>fmt（）</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#返回一个字符串（评论的字符格式化）</span></span><br><span class=\"line\">a=cmt(<span class=\"string\">&quot;http://code.xueersi.com/home/project/detail?lang=code&amp;pid=9785566&amp;version=offline&amp;form=python&amp;langType=python&quot;</span>)</span><br><span class=\"line\">print(a.fmt())</span><br><span class=\"line\"><span class=\"comment\">#部分输出</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">[2020-10-17 20:52:11]</span></span><br><span class=\"line\"><span class=\"string\">\t一维回复严子昱:快点=-=不取关就pen你</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-17 20:51:31]</span></span><br><span class=\"line\"><span class=\"string\">\t一维回复严子昱:有时关注我这个人，并不是太好的选择</span></span><br><span class=\"line\"><span class=\"string\">\t取关我吧，有事请加qq：3456198711</span></span><br><span class=\"line\"><span class=\"string\">\t微信：huiyu431249891</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-17 18:34:35]</span></span><br><span class=\"line\"><span class=\"string\">\t俊翔回复严子昱:作者是喜欢互关吗？居然关注我这样的蚂蚁，太感动了</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-15 21:56:11]</span></span><br><span class=\"line\"><span class=\"string\">\t陈奕翰回复严子昱:考虑合作嘛</span></span><br><span class=\"line\"><span class=\"string\">\t</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-10 19:29:26]</span></span><br><span class=\"line\"><span class=\"string\">\t茜幻回复严子昱:作者在吗</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-10 19:10:42]</span></span><br><span class=\"line\"><span class=\"string\">\t蒋狄璁回复严子昱:互关</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">.......(略)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"sorted（by-“likes”-reverse-True）\"><a href=\"#sorted（by-“likes”-reverse-True）\" class=\"headerlink\" title=\"sorted（by=“likes”,reverse=True）\"></a>sorted（by=“likes”,reverse=True）</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#设置排序</span></span><br><span class=\"line\">a=cmt(<span class=\"string\">&quot;http://code.xueersi.com/home/project/detail?lang=code&amp;pid=9785566&amp;version=offline&amp;form=python&amp;langType=python&quot;</span>)</span><br><span class=\"line\">a.<span class=\"built_in\">sorted</span>(by=<span class=\"string\">&quot;likes&quot;</span>,reverse=<span class=\"literal\">True</span>)<span class=\"comment\">#reverse为 从高到低排列</span></span><br><span class=\"line\">print(a.fmt())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">[2020-10-15 21:56:11]</span></span><br><span class=\"line\"><span class=\"string\">\t陈奕翰回复严子昱:考虑合作嘛</span></span><br><span class=\"line\"><span class=\"string\">\t</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-17 20:52:11]</span></span><br><span class=\"line\"><span class=\"string\">\t一维回复严子昱:快点=-=不取关就pen你</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-17 18:34:35]</span></span><br><span class=\"line\"><span class=\"string\">\t俊翔回复严子昱:作者是喜欢互关吗？居然关注我这样的蚂蚁，太感动了</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">[2020-10-01 20:51:57]</span></span><br><span class=\"line\"><span class=\"string\">\t王玎珰回复严子昱:啊这</span></span><br><span class=\"line\"><span class=\"string\">...（略）</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"xesuser（获取学而思站上某个用户的数据！已修复！）\"><a href=\"#xesuser（获取学而思站上某个用户的数据！已修复！）\" class=\"headerlink\" title=\"xesuser（获取学而思站上某个用户的数据！已修复！）\"></a><strong>xesuser（获取学而思站上某个用户的数据！已修复！）</strong></h1><p><u><strong><em>注意！！</em></strong></u></p>\n<p><u><strong><em>千万一定不要超高频率请求，否则会报错！！！</em></strong></u></p>\n<p>作者：严子昱</p>\n<h2 id=\"导入方式-3\"><a href=\"#导入方式-3\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.xesuser <span class=\"keyword\">import</span>*</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"get-user-id-“作品网址”\"><a href=\"#get-user-id-“作品网址”\" class=\"headerlink\" title=\"get_user_id(“作品网址”)\"></a>get_user_id(“作品网址”)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user_id=get_user_id(<span class=\"string\">&quot;作品网址&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#本作品最重要的函数，这个获取作品网址的作者的user_id</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"get-fans-user-id\"><a href=\"#get-fans-user-id\" class=\"headerlink\" title=\"get__fans(user_id)\"></a>get__fans(user_id)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fans_info=get_fans(user_id) </span><br><span class=\"line\"><span class=\"comment\">#这个user_id从上面拿</span></span><br><span class=\"line\"><span class=\"comment\">#获取这个人粉丝的大部分信息，返回一个列表</span></span><br><span class=\"line\"><span class=\"comment\">#每项是一个字典：</span></span><br><span class=\"line\">   fans_info[x][<span class=\"string\">&quot;realname&quot;</span>]<span class=\"comment\">#:获取第x项他的名字</span></span><br><span class=\"line\">   fans_info[x][<span class=\"string\">&quot;avatar_path&quot;</span>]<span class=\"comment\">#:获取第x项他头像的url</span></span><br><span class=\"line\">   fans_info[x][<span class=\"string\">&quot;fans&quot;</span>]<span class=\"comment\">#:获取第x项他的粉丝数量</span></span><br><span class=\"line\">   fans_info[x][<span class=\"string\">&quot;follows&quot;</span>]<span class=\"comment\">#:获取第x项他的关注数量</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"get-follows-user-id\"><a href=\"#get-follows-user-id\" class=\"headerlink\" title=\"get_follows(user_id)\"></a>get_follows(user_id)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">follows_info=get_follows(user_id) </span><br><span class=\"line\"><span class=\"comment\">#大体和get_fans一样</span></span><br><span class=\"line\"><span class=\"comment\">#获取这个人粉丝的大部分信息，返回一个列表</span></span><br><span class=\"line\"><span class=\"comment\">#每项是一个字典：</span></span><br><span class=\"line\">   follows_info[x][<span class=\"string\">&quot;realname&quot;</span>]<span class=\"comment\">#:获取第x项他的名字</span></span><br><span class=\"line\">   follows_info[x][<span class=\"string\">&quot;avatar_path&quot;</span>]<span class=\"comment\">#:获取第x项他头像的url</span></span><br><span class=\"line\">   follows_info[x][<span class=\"string\">&quot;fans&quot;</span>]<span class=\"comment\">#:获取第x项他的粉丝数量</span></span><br><span class=\"line\">   follows_info[x][<span class=\"string\">&quot;follows&quot;</span>]<span class=\"comment\">#:获取第x项他的关注数量</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"get-info-user-id\"><a href=\"#get-info-user-id\" class=\"headerlink\" title=\"get_info(user_id)\"></a>get_info(user_id)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user_info=get_info(user_id) </span><br><span class=\"line\"><span class=\"comment\">#获取这个人的大部分信息，返回一个字典</span></span><br><span class=\"line\">user_info[<span class=\"string\">&quot;name&quot;</span>]<span class=\"comment\">#:返回这个人的名字</span></span><br><span class=\"line\">user_info[<span class=\"string\">&quot;slogan&quot;</span>]<span class=\"comment\">#:返回这个人的口号(名字下面那段)</span></span><br><span class=\"line\">user_info[<span class=\"string\">&quot;fans&quot;</span>]<span class=\"comment\">#:返回这个人的粉丝数量</span></span><br><span class=\"line\">user_info[<span class=\"string\">&quot;follows&quot;</span>]<span class=\"comment\">#:返回这个人的关注数量</span></span><br><span class=\"line\">user_info[<span class=\"string\">&quot;icon&quot;</span>]<span class=\"comment\">#:返回这个人的头像url</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"user-user-id\"><a href=\"#user-user-id\" class=\"headerlink\" title=\"user(user_id)\"></a>user(user_id)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user=user(user_id)<span class=\"comment\">#这个其实大部分都是前面的内容，不过前面的加载比较慢，这个适用需要数据比较多的程序</span></span><br><span class=\"line\">user.works<span class=\"comment\">#：获取发布的作品总数</span></span><br><span class=\"line\"><span class=\"comment\">#user.work_info#：获取发布的作品的信息，返回一个列表，列表的每项都是字典</span></span><br><span class=\"line\">user.work_num<span class=\"comment\">#：获取一共有多少个作品（曾经发过的也算）</span></span><br><span class=\"line\"></span><br><span class=\"line\">user.fans<span class=\"comment\">#：获取粉丝总数</span></span><br><span class=\"line\"><span class=\"comment\">#user.fans_info#：获取粉丝信息（和get_fans返回一样的信息）</span></span><br><span class=\"line\"></span><br><span class=\"line\">user.follows<span class=\"comment\">#：获取关注总数</span></span><br><span class=\"line\"><span class=\"comment\">#user.follows_info#：获取关注信息（和get_follows返回一样的信息）</span></span><br><span class=\"line\">user.like_num<span class=\"comment\">#：获取点赞总数</span></span><br><span class=\"line\">user.view_num<span class=\"comment\">#：获取浏览总数</span></span><br><span class=\"line\">user.favorites<span class=\"comment\">#：获取收藏总数</span></span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n<h1 id=\"xesapi\"><a href=\"#xesapi\" class=\"headerlink\" title=\"xesapi\"></a>xesapi</h1><h2 id=\"导入方式-4\"><a href=\"#导入方式-4\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.xesapi <span class=\"keyword\">import</span>* </span><br></pre></td></tr></table></figure>\n<h2 id=\"get-api-url\"><a href=\"#get-api-url\" class=\"headerlink\" title=\"get_api(url)\"></a>get_api(url)</h2><p>返回url这个api上的数据</p>\n<p>示例-&gt;<a href=\"http://code.xueersi.com/api/index/works/modules\">http://code.xueersi.com/api/index/works/modules</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(get_api(<span class=\"string\">&quot;http://code.xueersi.com/api/index/works/modules&quot;</span>))</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">==输出==</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;stat&#x27;: 1, &#x27;status&#x27;: 1, &#x27;msg&#x27;: &#x27;操作成功&#x27;, &#x27;data&#x27;: [&#123;&#x27;title&#x27;: &#x27;可多推荐&#x27;, &#x27;simple_title&#x27;: &#x27;推荐&#x27;, &#x27;lines&#x27;: 2, &#x27;projects&#x27;: [&#123;&#x27;id&#x27;: 11584188, &#x27;name&#x27;: &#x27;圆圈战争&#x27;, &#x27;category&#x27;: 1, &#x27;type&#x27;: &#x27;normal&#x27;, &#x27;user_id&#x27;: 9686613, &#x27;thumbnail&#x27;: &#x27;https://rescode.xesimg.com/hufu-code/common/mit/32f6766530dc287c1c8ab00c634e352b.png&#x27;, &#x27;published&#x27;: 1, &#x27;published_at&#x27;: &#x27;2020-11-18 19:42:53&#x27;, &#x27;modified_at&#x27;: &#x27;2020-11-18 19:42:53&#x27;, &#x27;likes&#x27;: 4, &#x27;views&#x27;: 333, &#x27;comments&#x27;: 0, &#x27;version&#x27;: &#x27;3.0&#x27;, &#x27;source&#x27;: &#x27;xes_live&#x27;, &#x27;deleted_at&#x27;: None, &#x27;original_id&#x27;: 2, &#x27;created_at&#x27;: &#x27;2020-11-17 20:46:43&#x27;, &#x27;updated_at&#x27;: &#x27;2020-11-20 21:25:02&#x27;, &#x27;weight&#x27;: 1, &#x27;adapter&#x27;: &#x27;&#x27;, &#x27;hidden_code&#x27;: 2, &#x27;source_code_views&#x27;: 3, &#x27;removed&#x27;: 0, &#x27;first_frame&#x27;: &#x27;https://rescode.xesimg.com/hufu-code/common/mit/32f6766530dc287c1c8ab00c634e352b.png&#x27;, &#x27;unlikes&#x27;: 5, &#x27;project_id&#x27;: 11584188, &#x27;works_id&#x27;: 11584188, &#x27;lang&#x27;: &#x27;scratch&#x27;, &#x27;popular_score&#x27;: 12.13, &#x27;username&#x27;: &#x27;冯嘉睿&#x27;, &#x27;user_avatar&#x27;: &#x27;https://oot.xesimg.com/user/h/cc1e41a2dc511b8108a05b8f0dc8cf69.jpg&#x27;, &#x27;project_type&#x27;: &#x27;scratch&#x27;, &#x27;topic_id&#x27;: &#x27;CS_11584188&#x27;&#125;, &#123;&#x27;id&#x27;: 11027485, &#x27;name&#x27;: &#x27;井字棋小游戏(双人)&#x27;, &#x27;category&#x27;: 1, &#x27;type&#x27;: &#x27;normal&#x27;, &#x27;user_id&#x27;: 7818569, &#x27;thumbnail&#x27;: </span></span><br><span class=\"line\"><span class=\"string\">...(略)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"get-page-page-lang-””-tag-””-type-”popular”\"><a href=\"#get-page-page-lang-””-tag-””-type-”popular”\" class=\"headerlink\" title=\"get_page(page,lang=””,tag=””,type=”popular”)\"></a>get_page(page,lang=””,tag=””,type=”popular”)</h2><p>page：页码</p>\n<p>lang：语言</p>\n<p>tag：标签</p>\n<p>type：爬取页面类型（默认为popular）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(get_page(<span class=\"number\">1</span>,<span class=\"string\">&quot;cpp&quot;</span>))</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">==输出==</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;page&#x27;: &#x27;1&#x27;, &#x27;per_page&#x27;: &#x27;35&#x27;, &#x27;total&#x27;: 7000, &#x27;data&#x27;: [&#123;&#x27;id&#x27;: 10443775, &#x27;name&#x27;: &#x27;教你如何黑电脑&#x27;, &#x27;category&#x27;: 1, &#x27;type&#x27;: &#x27;normal&#x27;, &#x27;user_id&#x27;: 8730932, &#x27;thumbnail&#x27;: &#x27;https://livefile.xesimg.com/programme/assets/b33adba6678f5e477f65d0f36d5581eb.jpg&#x27;, &#x27;la</span></span><br><span class=\"line\"><span class=\"string\">...(略)</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"page-all-tags\"><a href=\"#page-all-tags\" class=\"headerlink\" title=\"page_all_tags\"></a>page_all_tags</h2><p>这个是一个常量(就是上面那个tag可以取得量)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(page_all_tags)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">==输出==</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;all_tags&#x27;: [&#x27;游戏&#x27;, &#x27;动画&#x27;, &#x27;故事&#x27;, &#x27;模拟&#x27;, &#x27;艺术&#x27;, &#x27;教程&#x27;, &#x27;算法&#x27;, &#x27;海龟&#x27;, &#x27;沙盒专区&#x27;, &#x27;其他&#x27;], &#x27;tips&#x27;: &#x27;1、为什么要给作品打分类标签？n为你的作品选择分类，更有利于其他小朋友精准的找到你的作品，这样，你的作品被别人看到的机率会更大哦。n一定要准确的选择分类，不要随便选择不或者不选呦！nn2、如何为自己的作品选择分类？n要想准确的选择分类，首先要先知道每个分类代表什么意思，一起来了解一下吧！n游戏：射击，冒险，跑酷，换装等等这些都算作游戏。n动画：用编程实现动画效果的作品。n故事：用编程表达一个奇妙的故事，比如写小说。n模拟：视频软件模拟器，音乐软件模拟器，浏览器模拟器，甚至做个模拟的系统。n艺术：美术，音乐等等类型的作品都可以。n教程：如果你是大牛，就快做作品教别人和你一样优秀吧！n算法：算法是解决一个问题的方法，C++用户请看这里。n海龟：海龟画图是python语言中专门用户画图的方法呦！n沙盒专区：MC？mini？为什么不自己创作一个类似的作品呢？n其他：如果没想好自己作品的分类，就选这个吧。&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"pygame-extend（pygame扩展）\"><a href=\"#pygame-extend（pygame扩展）\" class=\"headerlink\" title=\"pygame_extend（pygame扩展）\"></a>pygame_extend（pygame扩展）</h1><p>导入方式：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.pygame_extend <span class=\"keyword\">import</span> *</span><br></pre></td></tr></table></figure>\n<p>(这样顺便导入pygame和sys欸嘿嘿)</p>\n<p>！没写完教程等需求多了在说把！</p>\n<h1 id=\"tkinter-extend（tkinter扩展）\"><a href=\"#tkinter-extend（tkinter扩展）\" class=\"headerlink\" title=\"tkinter_extend（tkinter扩展）\"></a>tkinter_extend（tkinter扩展）</h1><h2 id=\"导入方式-5\"><a href=\"#导入方式-5\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.tkinter_extend <span class=\"keyword\">import</span>*</span><br></pre></td></tr></table></figure>\n<p>作者：严子昱</p>\n<h2 id=\"inpu-box\"><a href=\"#inpu-box\" class=\"headerlink\" title=\"inpu_box\"></a>inpu_box</h2><p>(class)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#创建(就当button控件用)：</span></span><br><span class=\"line\">a=inpu_box(tk,函数名,**按钮的配置)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#打包：</span></span><br><span class=\"line\">a.pack(**pack的配置)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#配置：</span></span><br><span class=\"line\">a.config_entry(**文本框的配置)</span><br><span class=\"line\">a.config_button(**按钮的配置)</span><br><span class=\"line\"><span class=\"comment\">#其实你基本可以当做Entry来用，除了初始化语句还有配置以外基本都是一样的</span></span><br><span class=\"line\"><span class=\"comment\">#（剩下的教程还没写完）</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"jitter\"><a href=\"#jitter\" class=\"headerlink\" title=\"jitter()\"></a>jitter()</h2><p>作用：抖动窗口（需要在窗口加载完毕后使用，否则可能会出现鬼畜）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tkinter <span class=\"keyword\">import</span> *</span><br><span class=\"line\">root = Tk()</span><br><span class=\"line\">a = Text(root)</span><br><span class=\"line\">a.pack(fill=BOTH)</span><br><span class=\"line\"></span><br><span class=\"line\">jitter(root)</span><br><span class=\"line\">root.mainloop()</span><br></pre></td></tr></table></figure>\n<h2 id=\"center\"><a href=\"#center\" class=\"headerlink\" title=\"center()\"></a>center()</h2><p>作用：将窗口居中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tkinter <span class=\"keyword\">import</span> *</span><br><span class=\"line\">root = Tk()</span><br><span class=\"line\">a = Text(root)</span><br><span class=\"line\">a.pack(fill=BOTH)</span><br><span class=\"line\"></span><br><span class=\"line\">jitter(root)</span><br><span class=\"line\">root.mainloop()</span><br></pre></td></tr></table></figure>\n<h1 id=\"dsfAdmin（自动安装第三方库）\"><a href=\"#dsfAdmin（自动安装第三方库）\" class=\"headerlink\" title=\"dsfAdmin（自动安装第三方库）\"></a>dsfAdmin（自动安装第三方库）</h1><p>开发者|严子昱</p>\n<p>(暂时只支持windows)</p>\n<h2 id=\"导入方式-6\"><a href=\"#导入方式-6\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.dsfAdmin <span class=\"keyword\">import</span>*</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"get-pakages\"><a href=\"#get-pakages\" class=\"headerlink\" title=\"get_pakages()\"></a>get_pakages()</h3><p>作用：获取已安装每个包的版本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(get_pakages())):</span><br><span class=\"line\">    print(<span class=\"string\">&quot;库&quot;</span>+x[<span class=\"number\">0</span>].center(<span class=\"number\">19</span>,<span class=\"string\">&quot; &quot;</span>),<span class=\"string\">&quot;版本&quot;</span>+x[<span class=\"number\">1</span>].center(<span class=\"number\">10</span>,<span class=\"string\">&quot; &quot;</span>))</span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n<h3 id=\"find-pakages-pakages-ver-None\"><a href=\"#find-pakages-pakages-ver-None\" class=\"headerlink\" title=\"find_pakages(pakages,ver=None)\"></a>find_pakages(pakages,ver=None)</h3><p>作用：获取时否安装pakage这个库，ver代表版本，默认不进行版本监测</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> find_pakages(<span class=\"string\">&quot;xingyunlib&quot;</span>):</span><br><span class=\"line\">    print(<span class=\"string\">&quot;你有安装xingyunlib库！&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;你没有安装xingyunlib库！&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"upgrade-pakages-pakage\"><a href=\"#upgrade-pakages-pakage\" class=\"headerlink\" title=\"upgrade_pakages(pakage)\"></a>upgrade_pakages(pakage)</h3><p>作用：更新pakage这个库</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upgrade_pakages(“xingyunlib”)</span><br></pre></td></tr></table></figure>\n<h3 id=\"install-pakages-pakage\"><a href=\"#install-pakages-pakage\" class=\"headerlink\" title=\"install_pakages(pakage)\"></a>install_pakages(pakage)</h3><p>作用：安装这个库,常和find_pakages一起用</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> find_pakages(<span class=\"string\">&quot;alsolib&quot;</span>):</span><br><span class=\"line\">\tinstall_pakages(<span class=\"string\">&quot;alsolib&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#注意这个，这个非常重要的,可以在没安装第三方库的时候自动下载库</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"dump-pip-list-filename\"><a href=\"#dump-pip-list-filename\" class=\"headerlink\" title=\"dump_pip_list(filename)\"></a>dump_pip_list(filename)</h3><p>作用：将库的list保存到这个文件里面</p>\n<h3 id=\"load-pip-list-filename\"><a href=\"#load-pip-list-filename\" class=\"headerlink\" title=\"load_pip_list(filename)\"></a>load_pip_list(filename)</h3><p>作用：将这个文件里面的库导出到正在使用的编译器</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dump_pip_list(<span class=\"string\">&quot;pip_pakages&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#同目录会出现一个‘pip_pakages.pip’文件</span></span><br><span class=\"line\"><span class=\"comment\"># |把这个文件移到另一台电脑</span></span><br><span class=\"line\"><span class=\"comment\"># v</span></span><br><span class=\"line\">load_pip_list(<span class=\"string\">&quot;pip_pakages&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#然后这个程序就会自动安装在第一台电脑上所有的第三方库了</span></span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"image（pillow及wordcloud扩展）\"><a href=\"#image（pillow及wordcloud扩展）\" class=\"headerlink\" title=\"image（pillow及wordcloud扩展）\"></a>image（pillow及wordcloud扩展）</h1><p>开发者|严子昱</p>\n<h2 id=\"导入方式-7\"><a href=\"#导入方式-7\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.image <span class=\"keyword\">import</span>*</span><br></pre></td></tr></table></figure>\n<h2 id=\"resize-filename-XY\"><a href=\"#resize-filename-XY\" class=\"headerlink\" title=\"resize(filename,XY)\"></a>resize(filename,XY)</h2><p>作用：将filename这个文件变成XY大的文件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">resive(<span class=\"string\">&quot;img1.png&quot;</span>,(<span class=\"number\">100</span>,<span class=\"number\">100</span>))</span><br><span class=\"line\"><span class=\"comment\">#将img1.png变成100x100的缩略图</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"cloud-text-font-path-savafile-None-image-None-background-color-”white”-color-True\"><a href=\"#cloud-text-font-path-savafile-None-image-None-background-color-”white”-color-True\" class=\"headerlink\" title=\"cloud(text,font_path,savafile=None,image=None,background_color=”white”,color=True)\"></a>cloud(text,font_path,savafile=None,image=None,background_color=”white”,color=True)</h2><p>（这个函数要安装numpy和wordcloud库）</p>\n<p>作用：text为列表，font_path为字体文件的位置</p>\n<p>savafile为保存的文件名，image为模板图片的名字</p>\n<p>background_color为背景颜色 color为是否根据模板图片的颜色上色（在有模板的情况下）</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">text=<span class=\"string\">&quot;ahuidgayugwuydgatywefuwfdytafayuofdwtyfauyfatyfautfatyfatyufduyoawfgtydfeutoaftyaf&quot;</span>.split(<span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">cloud(text,<span class=\"string\">&quot;(你的字体文件)&quot;</span>,<span class=\"string\">&quot;all.png&quot;</span>)</span><br><span class=\"line\">os.startfile(<span class=\"string\">&quot;all.png&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"add-text-img-text-args\"><a href=\"#add-text-img-text-args\" class=\"headerlink\" title=\"add_text(img, text, **args)\"></a>add_text(img, text, **args)</h2><p>这个**args包括以下内容</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">font=（”字体文件.ttf”，字号）</span><br><span class=\"line\">XY=（x坐标，y坐标）<span class=\"comment\">#这个坐标以图片左上角为0，0（原点）</span></span><br><span class=\"line\">fillColor=颜色（建议使用<span class=\"number\">16</span>进制颜色）</span><br><span class=\"line\">show_img=<span class=\"literal\">True</span><span class=\"comment\">#设置是否在修改完成后显示图片，默认为False</span></span><br><span class=\"line\">change_img=<span class=\"string\">&quot;newimgname.png&quot;</span><span class=\"comment\">#设置输出的图片文件名</span></span><br><span class=\"line\">add_text(<span class=\"string\">&quot;原图.png&quot;</span>,<span class=\"string\">&quot;广告&quot;</span>,font=font,XY=XY,fillColor=fillColor,show_img=show_img,change_img=change_img)</span><br></pre></td></tr></table></figure>\n<h1 id=\"user（自定义用户类）\"><a href=\"#user（自定义用户类）\" class=\"headerlink\" title=\"user（自定义用户类）\"></a>user（自定义用户类）</h1><p>开发者|严子昱</p>\n<h2 id=\"导入方式-8\"><a href=\"#导入方式-8\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib.user <span class=\"keyword\">import</span> *</span><br></pre></td></tr></table></figure>\n<p>初始化：</p>\n<h2 id=\"user-login-filename-None\"><a href=\"#user-login-filename-None\" class=\"headerlink\" title=\"user_login(filename=None)\"></a>user_login(filename=None)</h2><p>filename:之前的保存数据的文件名，如果没有保存过请不要写filename</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user=user_login()</span><br><span class=\"line\"><span class=\"comment\">#导入之前的数据</span></span><br><span class=\"line\">user=user_login(<span class=\"string\">&quot;&lt;数据文件名称&gt;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>注册：</p>\n<h4 id=\"user-registered-name-key-flag-True-filename-None\"><a href=\"#user-registered-name-key-flag-True-filename-None\" class=\"headerlink\" title=\"user.registered(name,key,flag=True,filename=None)\"></a>user.registered(name,key,flag=True,filename=None)</h4><p>name:注册的名字</p>\n<p>key:密码</p>\n<p>flag设置为True:如果已经导入数据则返回False(如果已经注册过了就不让你注册)否则返回True(注册成功）</p>\n<p>flag设置为False：都可以注册</p>\n<p>filename：保存数据文件的名称</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">type</span>=user.registered(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入你的名字：&quot;</span>),<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入你的密码：&quot;</span>),flag=<span class=\"literal\">True</span>,filename=<span class=\"string\">&quot;data&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">type</span>==<span class=\"literal\">True</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;注册成功！&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;注册失败！&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"user-login-name-key\"><a href=\"#user-login-name-key\" class=\"headerlink\" title=\"user.login(name,key)\"></a>user.login(name,key)</h4><p>name:注册时的名称</p>\n<p>key:密码</p>\n<p>返回一个bool值，为True或False</p>\n<p>True：验证密码正确 False：验证失败</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">type</span>=user.login(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入你的名字：&quot;</span>),<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入你的密码：&quot;</span>))</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">type</span>==<span class=\"literal\">True</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;注册成功！&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">&quot;注册失败！&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"user-load-filename\"><a href=\"#user-load-filename\" class=\"headerlink\" title=\"user.load(filename)\"></a>user.load(filename)</h4><p>导入保存的数据，filename为文件名</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">b=user_login()</span><br><span class=\"line\">b.load(<span class=\"string\">&quot;你保存的文件名&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h1 id=\"mail\"><a href=\"#mail\" class=\"headerlink\" title=\"mail\"></a>mail</h1><h2 id=\"导入方式-9\"><a href=\"#导入方式-9\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> mail</span><br></pre></td></tr></table></figure>\n<p>用法：</p>\n<h2 id=\"mail-send-to-title-txt\"><a href=\"#mail-send-to-title-txt\" class=\"headerlink\" title=\"mail.send(to,title,txt)\"></a>mail.send(to,title,txt)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mail.send(<span class=\"string\">&quot;3161399620@qq.com&quot;</span>,<span class=\"string\">&quot;hello python&quot;</span>,<span class=\"string\">&quot;hello world!&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>to:发送给的邮箱</p>\n<p>title:标题</p>\n<p>txt:发送的文本</p>\n<h1 id=\"err（自定义抛出错误）\"><a href=\"#err（自定义抛出错误）\" class=\"headerlink\" title=\"err（自定义抛出错误）\"></a>err（自定义抛出错误）</h1><h2 id=\"导入方式-10\"><a href=\"#导入方式-10\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> err</span><br></pre></td></tr></table></figure>\n<p>当你有一些程序想在特定的情况终止怎么办？</p>\n<p>试试下面的程序</p>\n<h2 id=\"err-txt\"><a href=\"#err-txt\" class=\"headerlink\" title=\"err(txt)\"></a>err(txt)</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> err</span><br><span class=\"line\">a=<span class=\"built_in\">input</span>(<span class=\"string\">&quot;请输入1：&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> a!=<span class=\"string\">&quot;1&quot;</span>:<span class=\"comment\">#如果非1</span></span><br><span class=\"line\">    err.err(<span class=\"string\">&quot;你没有输入1。。。&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"comment\">#程序自然退出</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"http-spider（爬虫）\"><a href=\"#http-spider（爬虫）\" class=\"headerlink\" title=\"http_spider（爬虫）\"></a>http_spider（爬虫）</h1><h2 id=\"导入方式-11\"><a href=\"#导入方式-11\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> http_spider</span><br></pre></td></tr></table></figure>\n<h2 id=\"load-requests-str-between-line\"><a href=\"#load-requests-str-between-line\" class=\"headerlink\" title=\"load_requests(str,between,line)\"></a>load_requests(str,between,line)</h2><p>默认值：between=”:” ; line=”\\n”</p>\n<p>between：分隔符</p>\n<p>line：换行符</p>\n<p>这个概念有点难理解，具体看下面示例，能不能听懂由天命</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> http_spider</span><br><span class=\"line\">header=http_spider.load_requests(<span class=\"string\">&quot;&quot;&quot;Accept: application/json, text/plain, */*</span></span><br><span class=\"line\"><span class=\"string\">Accept-Encoding: gzip, deflate</span></span><br><span class=\"line\"><span class=\"string\">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8</span></span><br><span class=\"line\"><span class=\"string\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.116 Safari/537.36&quot;&quot;&quot;</span>,<span class=\"string\">&quot;: &quot;</span>,<span class=\"string\">&quot;\\n&quot;</span>)<span class=\"comment\">#那段字符串是从浏览器复制出来的</span></span><br><span class=\"line\">print(header)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">----------</span></span><br><span class=\"line\"><span class=\"string\">输出：</span></span><br><span class=\"line\"><span class=\"string\">&#123;&#x27;Accept&#x27;: &#x27;application/json, text/plain, */*&#x27;, &#x27;Accept-Encoding&#x27;: &#x27;gzip, deflate&#x27;, &#x27;Accept-Language&#x27;: &#x27;zh-CN,zh;q=0.9,en;q=0.8&#x27;, &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.116 Safari/537.36&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>主要作用是自动分析从浏览器复制出来的headers</p>\n<h2 id=\"spider-args-kwargs\"><a href=\"#spider-args-kwargs\" class=\"headerlink\" title=\"spider(*args,**kwargs)\"></a>spider(*args,**kwargs)</h2><p>这个函数就明显很水，完全是凑数用的，不过对于一些新手来说还是有点用的</p>\n<p>其实就是requests的变体，增加了一个判断是否状态码是否10x，40x，50x的功能而已</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> http_spider</span><br><span class=\"line\">print(http_spider.spider(<span class=\"string\">&quot;http://code.xueersi.com/api/compilers/6?id=6&quot;</span>).text)</span><br><span class=\"line\"><span class=\"comment\">#略去输出结果</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"ua-list\"><a href=\"#ua-list\" class=\"headerlink\" title=\"ua_list\"></a>ua_list</h2><p>话不多说，上代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> http_spider</span><br><span class=\"line\">print(http_spider.ua_list)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">输出：</span></span><br><span class=\"line\"><span class=\"string\">[&#x27;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)&#x27;, &#x27;Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)&#x27;, &#x27;Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1)&#x27;, &#x27;Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1)&#x27;, &#x27;Mozilla/5.0 (compatible; rv:1.9.1) Gecko/20090702 Firefox/3.5&#x27;, &#x27;Mozilla/5.0 (compatible; rv:1.9.2) Gecko/20100101 Firefox/3.6&#x27;, &#x27;Mozilla/5.0 (compatible; rv:2.0) Gecko/20110101 Firefox/4.0&#x27;, &#x27;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:6.0.2) Gecko/20100101 Firefox/6.0.2&#x27;, &#x27;Mozilla/5.0 (compatible) AppleWebKit/534.21 (KHTML, like Gecko) Chrome/11.0.682.0 Safari/534.21&#x27;, &#x27;Opera/9.80 (compatible; U) Presto/2.7.39 Version/11.00&#x27;, &#x27;Mozilla/5.0 (compatible; U) AppleWebKit/533.1 (KHTML, like Gecko) Maxthon/3.0.8.2 Safari/533.1&#x27;, &#x27;Mozilla/5.0 (Linux; U; Android 2.2) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1 &#x27;, &#x27;Mozilla/5.0 (iPhone; U; CPU OS 4_2_1 like Mac OS X) AppleWebKit/532.9 (KHTML, like Gecko) Version/5.0.3 Mobile/8B5097d Safari/6531.22.7&#x27;, &#x27;Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/4.0.2 Mobile/8C148 Safari/6533.18.5&#x27;, &#x27;Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_7) AppleWebKit/534.16+ (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4&#x27;]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<p>这是一个列表，里面有很多笔者搜集的ua，（截至2020-9-19）收录了15个ua，足够你用了</p>\n<h2 id=\"get-xes-url-url\"><a href=\"#get-xes-url-url\" class=\"headerlink\" title=\"get_xes_url(url)\"></a>get_xes_url(url)</h2><p>爬取一个xes的页面</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> http_spider</span><br><span class=\"line\">print(http_spider.get_xes_url(<span class=\"string\">&quot;http://code.xueersi.com/api/compilers/6?id=6&quot;</span>))</span><br><span class=\"line\"><span class=\"comment\">#略去输出结果</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"data（保存数据）\"><a href=\"#data（保存数据）\" class=\"headerlink\" title=\"data（保存数据）\"></a>data（保存数据）</h1><p>数据类方法</p>\n<p>2020-10-1</p>\n<p>作者：严子昱</p>\n<h2 id=\"导入方式-12\"><a href=\"#导入方式-12\" class=\"headerlink\" title=\"导入方式\"></a>导入方式</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> xingyunlib <span class=\"keyword\">import</span> data</span><br></pre></td></tr></table></figure>\n<h2 id=\"Data\"><a href=\"#Data\" class=\"headerlink\" title=\"Data\"></a>Data</h2><p>初始化方法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dta=data.Data(filename,find=<span class=\"literal\">False</span>)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">filename:文件名，若没有则创建</span></span><br><span class=\"line\"><span class=\"string\">find:搜索模式，若没有filename则报错</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n<p>输入数据：</p>\n<h3 id=\"change-data-data\"><a href=\"#change-data-data\" class=\"headerlink\" title=\"change_data(data)\"></a>change_data(data)</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dta=data.Data(filename,find=<span class=\"literal\">False</span>)</span><br><span class=\"line\"><span class=\"comment\">#略</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">data参数支持的数据:</span></span><br><span class=\"line\"><span class=\"string\">list,bool,tutle,str,set,dict,int,float</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">dta.change_data(<span class=\"string\">&quot;加油！&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"eval-data\"><a href=\"#eval-data\" class=\"headerlink\" title=\"eval_data()\"></a>eval_data()</h3><p>把从文件中保存的数据转换成可执行内容</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;fruit.txt内容：</span></span><br><span class=\"line\"><span class=\"string\">[&quot;apple&quot;,&quot;orange&quot;]</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\">dta=data.Data(<span class=\"string\">&quot;fruit.txt&quot;</span>,find=<span class=\"literal\">False</span>)</span><br><span class=\"line\">dta.eval_data()</span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> dta.data:</span><br><span class=\"line\">    print(<span class=\"string\">f&quot;fruit:<span class=\"subst\">&#123;x&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">输出结果：</span></span><br><span class=\"line\"><span class=\"string\">fruit:apple</span></span><br><span class=\"line\"><span class=\"string\">fruit:orange</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"save\"><a href=\"#save\" class=\"headerlink\" title=\"save()\"></a>save()</h3><p>保存结果到文件中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dta=data.Data(<span class=\"string\">&quot;great&quot;</span>,find=<span class=\"literal\">False</span>)</span><br><span class=\"line\">dta.change_data([<span class=\"string\">&quot;hhc&quot;</span>,<span class=\"string\">&quot;hhv&quot;</span>])</span><br><span class=\"line\">dta.save()</span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;great内容:</span></span><br><span class=\"line\"><span class=\"string\">[&quot;hhc&quot;,&quot;hhv&quot;]&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckl0o2ac40000io8d5nnl4vkr","tag_id":"ckl0o2acb0002io8d7bnla2hb","_id":"ckl0o2acd0004io8dexax76hz"},{"post_id":"ckl0o2ac90001io8dbzbnc6k6","tag_id":"ckl0o2acc0003io8da5wmgwgh","_id":"ckl0o2acd0005io8ddat9dhcd"},{"post_id":"ckl0o2acg0006io8da1p04m9h","tag_id":"ckl0o2ach0007io8d1k29bobn","_id":"ckl0o2ach0008io8d7g7k6q66"}],"Tag":[{"name":"C++","_id":"ckl0o2acb0002io8d7bnla2hb"},{"name":"随笔","_id":"ckl0o2acc0003io8da5wmgwgh"},{"name":"Python","_id":"ckl0o2ach0007io8d1k29bobn"}]}}